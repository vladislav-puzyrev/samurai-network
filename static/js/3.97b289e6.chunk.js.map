{"version":3,"sources":["components/Main/Profile/Profile.module.css","components/Main/Profile/User/User.module.css","components/Main/Profile/Posts/Posts.module.css","components/Main/Profile/Posts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Main/Profile/User/Status/StatusHooks.tsx","components/Main/Profile/User/ProfileDataForm.jsx","components/Main/Profile/User/User.jsx","components/Main/Profile/Posts/Post/Post.jsx","components/Main/Profile/Posts/Posts.jsx","components/Main/Profile/Posts/PostsContainer.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Status","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","onClick","autoFocus","onChange","event","currentTarget","onBlur","updateStatus","onFocus","select","type","Input","createField","Textarea","reduxForm","form","onSubmit","handleSubmit","error","Field","placeholder","name","component","validate","required","keys","profile","contacts","map","key","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","about","lookingForAJob","lookingForAJobDescription","aboutMe","contLI","User","savePhoto","saveProfile","user","avatar","avatarWrapper","avatarIMG","src","photos","large","defaultAvatar","alt","avatarLoad","e","target","files","info","fullName","initialValues","formData","then","Preloader","Post","post","message","text","likes","maxLength","maxLengthCreator","AddNewPostFormRedux","textarea","button","Posts","postsElements","state","profilePage","posts","id","reverse","title","addPost","postsList","PostsContainer","connect","dispatch","addPostActionCreator","Profile","ProfileContainer","userURLId","this","match","params","userId","history","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.97b289e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1gLmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3IO7s\",\"avatar\":\"User_avatar__PIYbG\",\"avatarWrapper\":\"User_avatarWrapper__12L1B\",\"avatarIMG\":\"User_avatarIMG__X7TVA\",\"avatarLoad\":\"User_avatarLoad__1jwMd\",\"info\":\"User_info__3RGS0\",\"name\":\"User_name__2C3bT\",\"about\":\"User_about__OICPx\",\"contacts\":\"User_contacts__3FDjf\",\"contLI\":\"User_contLI__3tgPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__epRJ6\",\"title\":\"Posts_title__3oTfI\",\"textarea\":\"Posts_textarea__1CXXA\",\"button\":\"Posts_button__3XZT1\",\"postsList\":\"Posts_postsList__3exEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__lASZN\",\"avatar\":\"Post_avatar__3eC36\",\"message\":\"Post_message__3tS2K\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useEffect, useState } from 'react'\nimport styles from './Status.module.css'\n\ntype PropTypes = {\n  status: string\n  updateStatus: (status: string) => void\n}\n\nfunction Status (props: PropTypes) {\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n  // let [editMode, setEditMode] = useState<number | null>(null)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n  }\n\n  const updateStatus = () => {\n    deactivateEditMode()\n    props.updateStatus(status)\n  }\n\n  const onStatusChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStatus(event.currentTarget.value)\n  }\n\n  const selectInputText = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.currentTarget.select()\n  }\n\n  return (\n    <div className={styles.status}>\n      {\n        !editMode &&\n        <div onClick={activateEditMode}>{props.status || 'null'}</div>\n      }\n\n      {\n        editMode &&\n        <div>\n          <input autoFocus onChange={onStatusChange} onBlur={updateStatus}\n                 onFocus={selectInputText} type=\"text\" value={status}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Status\n","import React from 'react'\r\nimport { createField } from '../../../common/FormsControls/createField'\r\nimport { required } from '../../../../utils/validators'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst Input = createField('input')\r\nconst Textarea = createField('textarea')\r\n\r\nfunction ProfileDataForm (props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <button>Сохранить</button>\r\n      </div>\r\n\r\n      {props.error && <div>{props.error}</div>}\r\n\r\n      <div>\r\n        <div>\r\n          <label>\r\n            Имя:\r\n            <Field\r\n              type='text' placeholder='Имя' name='fullName'\r\n              component={Input} validate={[required]}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Ищу работу:\r\n            <Field type='checkbox' name='lookingForAJob' component={Input}/>\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Мои навыки:\r\n            <Field\r\n              name='lookingForAJobDescription' component={Textarea}\r\n              validate={[required]}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Обо мне:\r\n            <Field name='aboutMe' component={Textarea} validate={[required]}/>\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <b>Контакты</b>\r\n          {\r\n            Object.keys(props.profile.contacts).map(key => {\r\n              return <div key={key}>\r\n                <b>{key}</b>:\r\n                <Field\r\n                  type='text' placeholder={key} name={'contacts.' + key}\r\n                  component={Input}\r\n                />\r\n              </div>\r\n            })\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n","import React, { useState } from 'react'\nimport styles from './User.module.css'\nimport Preloader from '../../../common/Preloader/Preloader'\nimport Status from './Status/StatusHooks'\nimport defaultAvatar from '../../../../assets/images/defaultAvatar.png'\nimport ProfileDataForm from './ProfileDataForm'\n\nfunction User ({ profile, savePhoto, status, updateStatus, isOwner, saveProfile }) {\n  const [editMode, setEditMode] = useState(false)\n\n  if (!profile) {\n    return <Preloader/>\n  }\n\n  function onMainPhotoSelected (e) {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0])\n    }\n  }\n\n  function onSubmit (formData) {\n    saveProfile(formData).then(() => {\n      setEditMode(false)\n    })\n  }\n\n  return (\n    <div className={styles.user}>\n      <div className={styles.avatar}>\n        <div className={styles.avatarWrapper}>\n          <img\n            className={styles.avatarIMG}\n            src={profile.photos.large || defaultAvatar} alt='avatar'\n          />\n        </div>\n        {\n          isOwner &&\n          <div className={styles.avatarLoad}>\n            <input onChange={onMainPhotoSelected} type='file'/>\n          </div>\n        }\n      </div>\n\n      <div className={styles.info}>\n        <h1 className={styles.name}>\n          {profile && profile.fullName}\n        </h1>\n        <Status status={status} updateStatus={updateStatus}/>\n        {editMode\n          ? <ProfileDataForm\n            profile={profile} initialValues={profile}\n            onSubmit={onSubmit}\n          />\n          : <ProfileData\n            goToEditMode={() => { setEditMode(true) }}\n            isOwner={isOwner} profile={profile}\n          />}\n      </div>\n    </div>\n  )\n}\n\nfunction Contact ({ contactTitle, contactValue }) {\n  return <li>{contactTitle}: {contactValue}</li>\n}\n\nfunction ProfileData ({ profile, isOwner, goToEditMode }) {\n  return (\n    <>\n      {isOwner && <button onClick={goToEditMode}>Редактировать</button>}\n      <ul className={styles.about}>\n        <li>Ищу работу: {profile.lookingForAJob ? 'да' : 'нет'}</li>\n        {profile.lookingForAJob && <li>Мои профессиональные\n          навыки: {profile.lookingForAJobDescription}\n        </li>}\n        {profile.aboutMe && <li>Обо мне: {profile.aboutMe}</li>}\n        <li className={styles.contLI}>\n          Мои контакты:\n          <ul className={styles.contacts}>\n            {Object.keys(profile.contacts).map((key) =>\n              <Contact\n                key={key} contactTitle={key}\n                contactValue={profile.contacts[key]}\n              />,\n            )}\n          </ul>\n        </li>\n      </ul>\n    </>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport styles from './Post.module.css'\n\nfunction Post (props) {\n  return (\n    <div className={styles.post}>\n      <div>\n        <img className={styles.avatar} src='https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg' alt='' />\n      </div>\n      <div className={styles.message}>\n        <div>\n          {props.text}\n        </div>\n        <div>\n          {props.likes}♥\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport styles from './Posts.module.css'\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../../utils/validators'\nimport { createField } from '../../../common/FormsControls/createField'\n\nconst maxLength = maxLengthCreator(10)\nconst Textarea = createField('textarea')\n\nfunction Posts (props) {\n  const postsElements = props.state.profilePage.posts.map(\n    post => <Post key={post.id} text={post.text} likes={post.likes} />\n  ).reverse()\n\n  return (\n    <div className={styles.posts}>\n      <h2 className={styles.title}>Посты</h2>\n      <AddNewPostFormRedux onSubmit={(formData) => { props.addPost(formData) }} />\n      <div className={styles.postsList}>\n        {postsElements}\n      </div>\n    </div>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddNewPost' })(AddNewPostForm)\n\nfunction AddNewPostForm (props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          className={styles.textarea} name='newPost' component={Textarea} placeholder='Что у вас нового?'\n          validate={[required, maxLength]}\n        />\n      </div>\n      <div>\n        <button className={styles.button}>Отправить</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Posts\n","import { addPostActionCreator } from '../../../../redux/profile-reducer'\nimport Posts from './Posts'\nimport { connect } from 'react-redux'\n\nfunction mapStateToProps (state) {\n  return {\n    state: state\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    addPost (formData) {\n      dispatch(addPostActionCreator(formData))\n    }\n  }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\n\nexport default PostsContainer\n","import React from 'react'\nimport styles from './Profile.module.css'\nimport User from './User/User'\nimport PostsContainer from './Posts/PostsContainer'\n\nfunction Profile (props) {\n  return (\n    <div className={styles.profile}>\n      <User\n        savePhoto={props.savePhoto}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        isOwner={props.isOwner}\n        saveProfile={props.saveProfile}\n      />\n      <PostsContainer/>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {\r\n  getStatus,\r\n  getUsersProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus\r\n} from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile () {\r\n    const userURLId = this.props.match.params.userId || this.props.userId || this.props.history.push('/login')\r\n    this.props.getUsersProfile(userURLId)\r\n    this.props.getStatus(userURLId)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}