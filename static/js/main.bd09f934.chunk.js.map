{"version":3,"sources":["components/Sidebar/Menu/Menu.module.css","components/Footer/Footer.module.css","components/Sidebar/Sidebar.module.css","components/Main/Main.module.css","components/common/Button/Button.module.css","components/Main/Users/UsersList/UsersList.module.css","components/common/FormsControls/FormsControls.module.css","components/Main/Messages/Dialog/Dialog.module.css","components/Main/Users/UsersList/User/User.module.css","serviceWorker.ts","components/Footer/Footer.tsx","components/Sidebar/Menu/Menu.tsx","components/Sidebar/Sidebar.tsx","api/api.ts","redux/users-reducer.ts","redux/users-selectors.ts","components/common/Button/Button.tsx","components/Main/Users/Search/Search.tsx","components/Main/Users/Paginator/PaginationItem/PaginationItem.tsx","components/Main/Users/Paginator/Paginator.tsx","components/Main/Users/UsersList/User/User.tsx","components/common/Preloader/Preloader.tsx","components/Main/Users/UsersList/UsersList.tsx","components/Main/Users/Users.tsx","components/Main/News/News.tsx","components/Main/Music/Music.tsx","components/Main/Settings/Settings.tsx","components/common/FormsControls/createField.tsx","utils/validators.ts","redux/init-reducer.ts","redux/auth-reducer.ts","components/Main/Login/Login.jsx","redux/messages-reducer.ts","components/Main/Messages/Dialog/Dialog.jsx","components/Main/Messages/Message/Message.jsx","components/Main/Messages/Messages.jsx","hoc/withAuthRedirect.tsx","components/Main/Messages/MessagesContainer.jsx","redux/profile-reducer.ts","components/Main/Profile/User/Avatar/Avatar.jsx","components/Main/Profile/User/UserInfo/Status/Status.tsx","components/common/Input/Input.tsx","components/common/Textarea/Textarea.tsx","components/Main/Profile/User/UserInfo/ProfileDataForm/ProfileDataForm.jsx","components/Main/Profile/User/UserInfo/ProfileData/ProfileData.jsx","components/Main/Profile/User/UserInfo/UserInfo.jsx","components/Main/Profile/User/User.jsx","components/Main/Profile/Posts/Post/Post.jsx","components/Main/Profile/Posts/Posts.jsx","components/Main/Profile/Posts/PostsContainer.jsx","components/Main/Profile/Profile.tsx","components/Main/Main.tsx","components/Header/Header.tsx","components/App.tsx","redux/store.ts","index.tsx","components/Main/Profile/User/Avatar/Avatar.module.css","components/Main/Profile/User/UserInfo/Status/Status.module.css","components/Header/Header.module.css","components/Main/Profile/Posts/Posts.module.css","components/common/Preloader/Preloader.module.css","components/Main/Messages/Messages.module.css","components/Main/Profile/User/UserInfo/ProfileDataForm/ProfileDataForm.module.css","assets/images/defaultAvatar.png","components/Main/Users/Search/Search.module.css","components/Main/Users/Paginator/Paginator.module.css","components/Main/Messages/Message/Message.module.css","components/Main/Profile/User/UserInfo/ProfileData/ProfileData.module.css","components/Main/Profile/Posts/Post/Post.module.css","components/App.module.css","components/Main/Users/Paginator/PaginationItem/PaginationItem.module.css","assets/images/preloader.gif","components/Main/Profile/User/UserInfo/UserInfo.module.css","components/common/Input/Input.module.css","components/common/Textarea/Textarea.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Footer","className","styles","footer","Menu","menu","menuItem","exact","to","menuLink","activeClassName","active","Sidebar","aside","server","axios","create","withCredentials","baseURL","headers","usersAPI","count","page","term","get","res","data","userID","post","delete","profileAPI","status","put","photoFile","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_TERM","initialState","users","totalUsersCount","currentPage","isFetching","followingInProgress","setUsers","type","setTotalUsers","totalUsers","setIsFetching","toggleFollowingProgress","userId","usersReducer","state","action","map","user","id","followed","filter","getUsers","usersPage","getUsersSelector","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Button","width","children","onClick","margin","style","button","Search","React","memo","setTerm","setCurrentPage","setPortionNumber","useState","inputText","setInputText","searchButtonStyle","cursor","div","placeholder","onChange","event","target","value","input","disabled","PaginationItem","number","activeStyle","paginationItemActive","paginationItem","data-number","Paginator","pageSize","portionSize","getRequestUsers","portionNumber","useEffect","pageCount","Math","ceil","pages","i","push","portionCount","lastElemPageNumber","leftPortionPageNumber","rightPortionPageNumber","pageNumber","dataset","onPageChanged","paginationItems","num","key","User","followButtonDisabled","unfollow","follow","avatarBox","src","photos","small","defaultAvatar","alt","info","userName","name","userStatus","followButton","aria-label","role","sendMessage","Preloader","fullscreen","wrapper","preloader","preloaderIMG","UsersList","usersOrMessage","length","some","compose","connect","dispatch","a","async","response","items","totalCount","resultCode","News","messages","Music","Settings","createField","FormElement","meta","props","isError","error","touched","required","maxLengthCreator","INITIALIZED_SUCCESS","initialized","getMyProfile","getState","isAuth","auth","setMyProfile","initReducer","SET_USER_DATA","GET_CAPTCHA_URL","SET_MY_PROFILE","login","captchaUrl","myProfile","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","meData","getCaptchaUrl","url","authReducer","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","validate","checked","htmlFor","color","then","stopSubmit","_error","SEND_MESSAGE","dialogs","username","message","sendMessageActionCreator","messagesReducer","newMessage","Dialog","dialog","String","Message","chatItem","avatar","maxLength","Textarea","AddMessageFormRedux","Messages","dialogsElements","messagesElements","output","chat","buttonOnClick","mapStateToPropsForRedirect","messagesPage","Component","RedirectComponent","this","ADD_POST","SET_USER_PROFILE","SET_STATUS","SET_PROFILE_PHOTO","SET_AVATAR_FETCHING","posts","text","likes","avatarIsFetching","addPost","newPost","setUserProfile","setStatus","setAvatarIsFetching","getUsersProfile","profileReducer","Avatar","isOwner","savePhoto","uploadLabel","createRef","avatarWrapper","avatarIMG","large","upload","uploadInput","e","files","photo","current","textContent","ref","Status","updateStatus","editMode","setEditMode","localStatus","setLocalStatus","statusClass","statusExist","statusNotExist","statusBox","autoFocus","currentTarget","onBlur","onFocus","select","statusInput","statusNotMe","rows","cols","textarea","aboutMe","myContacts","Object","keys","contacts","toUpperCase","slice","ProfileData","isContactsExists","values","contact","about","lookingForAJob","lookingForAJobDescription","contactsList","entries","rel","href","UserInfo","saveProfile","fullName","initialValues","display","Post","AddNewPostFormRedux","Posts","postsElements","profilePage","reverse","title","postsList","PostsContainer","getStatus","file","Promise","reject","withRouter","history","userURL","params","Main","content","path","render","MessagesContainer","logout","header","container","infoMe","split","init","initializeApp","main","rootReducer","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bd09f934.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__27qdF\",\"menuLink\":\"Menu_menuLink__EHAtu\",\"active\":\"Menu_active__2D1vX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3hmYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Sidebar_aside__1e2NK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__2h5Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__OZeNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersList_users__WQVOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__JuxJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__PhsES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Qdic\",\"avatarBox\":\"User_avatarBox__dLefj\",\"info\":\"User_info__3dI-o\",\"userName\":\"User_userName__1AQPc\",\"followButton\":\"User_followButton__y-S0x\",\"sendMessage\":\"User_sendMessage__39BmE\",\"userStatus\":\"User_userStatus__1tTcC\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      }\n      else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            }\n            else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Main is cached for offline use.\" message.\n              console.log('Main is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      }\n      else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport styles from './Footer.module.css'\n\nfunction Footer () {\n  return (\n    <footer className={styles.footer}>\n      samurai-network\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './Menu.module.css'\n\nfunction Menu () {\n  return (\n    <ul className={styles.menu}>\n      <li className={styles.menuItem}>\n        <NavLink\n          exact to='/profile' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Моя страница\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/messages' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Сообщения\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/users' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Пользователи\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/news' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Новости\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/music' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Музыка\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/settings' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Настройки\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styles from './Sidebar.module.css'\nimport Menu from './Menu/Menu'\n\nfunction Sidebar () {\n  return (\n    <aside className={styles.aside}>\n      <Menu/>\n    </aside>\n  )\n}\n\nexport default Sidebar\n","import axios from 'axios'\r\nimport {\r\n  GetUsersResponse,\r\n  OperationResult,\r\n  SavePhotoResponse,\r\n  MeResponse,\r\n  LoginResponse,\r\n  GetCaptchaResponse,\r\n  GetAllDialogsResponse,\r\n  GetDialogResponse, SendMessageResponse, messagesNewerThanDateResponse\r\n} from '../types/APITypes'\r\nimport { ProfileType } from '../types/AppTypes'\r\n\r\nconst server = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    // ca3b0eb4-4af6-4803-8caa-f7d26464a12c main\r\n    // a7da6dad-5c4f-417c-a0d9-8d30ee0d96ec secondary\r\n    'API-KEY': 'ca3b0eb4-4af6-4803-8caa-f7d26464a12c',\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  async getUsers (count: number, page: number, term = '') {\r\n    const res = await server.get<GetUsersResponse>(`users?count=${count}&page=${page}&term=${term}`)\r\n    return res.data\r\n  },\r\n  async isFollowing (userID: number) {\r\n    const res = await server.get<boolean>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n  async follow (userID: number) {\r\n    const res = await server.post<OperationResult>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n  async unfollow (userID: number) {\r\n    const res = await server.delete<OperationResult>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  async getProfile (userID: number) {\r\n    const res = await server.get<ProfileType>(`profile/${userID}`)\r\n    return res.data\r\n  },\r\n  async getStatus (userID: number) {\r\n    const res = await server.get<string>(`profile/status/${userID}`)\r\n    return res.data\r\n  },\r\n  async updateStatus (status: string) {\r\n    const res = await server.put<OperationResult>(`profile/status`, { status: status })\r\n    return res.data\r\n  },\r\n  async updatePhoto (photoFile: File) {\r\n    const formData = new FormData()\r\n    formData.append(`image`, photoFile)\r\n\r\n    const res = await server.put<SavePhotoResponse>(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type':\r\n          'multipart/form-data'\r\n      }\r\n    })\r\n\r\n    return res.data\r\n  },\r\n  async updateProfile (profile: ProfileType) {\r\n    const res = await server.put<OperationResult>(`profile`, profile)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const authAPI = {\r\n  async me () {\r\n    const res = await server.get<MeResponse>(`auth/me`)\r\n    return res.data\r\n  },\r\n  async login (email: string, password: string, rememberMe = true, captcha: string) {\r\n    const res = await server.post<LoginResponse>(`auth/login`, { email, password, rememberMe, captcha })\r\n    return res.data\r\n  },\r\n  async logout () {\r\n    const res = await server.post<OperationResult>(`auth/logout`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const securityAPI = {\r\n  async getCaptcha () {\r\n    const res = await server.get<GetCaptchaResponse>(`security/get-captcha-url`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const dialogsAPI = {\r\n  // Сортировка человека вверх при начале чатинга\r\n  async startChatting (userID: number) {\r\n    const res = await server.put<OperationResult>(`dialogs/${userID}`)\r\n    return res.data\r\n  },\r\n  // Получить все диалоги (без сообщений просто для вывода)\r\n  async getAllDialogs () {\r\n    const res = await server.get<Array<GetAllDialogsResponse>>(`dialogs`)\r\n    return res.data\r\n  },\r\n  async getDialog (userID: number) {\r\n    const res = await server.get<GetDialogResponse>(`dialogs/${userID}/messages`)\r\n    return res.data\r\n  },\r\n  async sendMessage (userID: number, message: string) {\r\n    const res = await server.post<SendMessageResponse>(`dialogs/${userID}/messages`, { body: message })\r\n    return res.data\r\n  },\r\n  async isMessageViewed (messageID: string) {\r\n    const res = await server.get<boolean>(`dialogs/messages/${messageID}/viewed`)\r\n    return res.data\r\n  },\r\n  async putMessageInSpam (messageID: string) {\r\n    const res = await server.post<OperationResult>(`dialogs/messages/${messageID}/spam`)\r\n    return res.data\r\n  },\r\n  async deleteMessage (messageID: string) {\r\n    const res = await server.delete<OperationResult>(`dialogs/messages/${messageID}`)\r\n    return res.data\r\n  },\r\n  async restoreMessage (messageID: string) {\r\n    const res = await server.put<OperationResult>(`dialogs/messages/${messageID}/restore`)\r\n    return res.data\r\n  },\r\n  async messagesNewerThanDate (userID: number, date: string) {\r\n    const res = await server.get<Array<messagesNewerThanDateResponse>>(\r\n      `dialogs/${userID}/messages/new?newerThen=${date}`\r\n    )\r\n    return res.data\r\n  },\r\n  async getNewMessages () {\r\n    const res = await server.get<number>(`dialogs/messages/new/count`)\r\n    return res.data\r\n  },\r\n}\r\n\r\n// dialogsAPI.startChatting(5).then(r => {console.log(r)})\r\n// dialogsAPI.getAllDialogs().then(r => {console.log(r)})\r\n// dialogsAPI.getDialog(5).then(r => {console.log(r)})\r\n// dialogsAPI.sendMessage(5856, 'test').then(r => {console.log(r)})\r\n// dialogsAPI.isMessageViewed('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.putMessageInSpam('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.deleteMessage('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.restoreMessage('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.messagesNewerThanDate(5, '2020-03-11T17:11:10.403').then(r => {console.log(r)})\r\n// dialogsAPI.getNewMessages().then(r => {console.log(r)})\r\n","import { usersAPI } from '../api/api'\r\nimport { UserType } from '../types/AppTypes'\r\nimport { AppStateType } from './store'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\n/* Action types */\r\nconst FOLLOW = 'samurai-network/users/FOLLOW'\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW'\r\nconst SET_USERS = 'samurai-network/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\nconst SET_TERM = 'samurai-network/users/SET_TERM'\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>, // array of users ids\r\n  term: '',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes =\r\n  AcceptFollowActionType |\r\n  AcceptUnfollowActionType |\r\n  SetUsersActionType |\r\n  SetCurrentPageActionType |\r\n  SetTotalUsersActionType |\r\n  SetIsFetchingActionType |\r\n  ToggleFollowingProgressActionType |\r\n  setTermActionType\r\n\r\nfunction usersReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.id) {\r\n            return { ...user, followed: true }\r\n          }\r\n          return user\r\n        }),\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.id) {\r\n            return { ...user, followed: false }\r\n          }\r\n          return user\r\n        }),\r\n      }\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      }\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      }\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      }\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching ?\r\n          [...state.followingInProgress, action.userId] :\r\n          state.followingInProgress.filter(id => id !== action.userId),\r\n      }\r\n\r\n    case SET_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype AcceptFollowActionType = { type: typeof FOLLOW, id: number };\r\nexport const acceptFollow = (id: number): AcceptFollowActionType => ({\r\n  type: FOLLOW,\r\n  id\r\n})\r\n\r\ntype AcceptUnfollowActionType = { type: typeof UNFOLLOW, id: number };\r\nexport const acceptUnfollow = (id: number): AcceptUnfollowActionType => ({\r\n  type: UNFOLLOW,\r\n  id\r\n})\r\n\r\ntype SetUsersActionType = { type: typeof SET_USERS, users: Array<UserType> };\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({\r\n  type: SET_USERS,\r\n  users\r\n})\r\n\r\ntype SetCurrentPageActionType = { type: typeof SET_CURRENT_PAGE, currentPage: number };\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n})\r\n\r\ntype SetTotalUsersActionType = { type: typeof SET_TOTAL_USERS_COUNT, totalUsersCount: number };\r\nexport const setTotalUsers = (totalUsers: number): SetTotalUsersActionType => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount: totalUsers,\r\n})\r\n\r\ntype SetIsFetchingActionType = { type: typeof TOGGLE_IS_FETCHING, isFetching: boolean };\r\nexport const setIsFetching = (isFetching: boolean): SetIsFetchingActionType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n})\r\n\r\ntype ToggleFollowingProgressActionType = { type: typeof TOGGLE_IS_FOLLOWING_PROGRESS, isFetching: boolean, userId: number };\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n})\r\n\r\ntype setTermActionType = { type: typeof SET_TERM, term: string }\r\nexport const setTerm = (term: string): setTermActionType => ({\r\n  type: SET_TERM,\r\n  term,\r\n})\r\n\r\n/* Thunk creators */\r\n// type GetStateType = () => AppStateType\r\n// type DispatchType = Dispatch<ActionTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getRequestUsers = (pageSize: number, currentPage: number, term = ''): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(setIsFetching(true))\r\n    const response = await usersAPI.getUsers(pageSize, currentPage, term)\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsers(response.totalCount))\r\n    dispatch(setIsFetching(false))\r\n  }\r\n}\r\n\r\nexport const follow = (userID: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userID))\r\n    const response = await usersAPI.follow(userID)\r\n    if (response.resultCode === 0) dispatch(acceptFollow(userID))\r\n    dispatch(toggleFollowingProgress(false, userID))\r\n  }\r\n}\r\n\r\nexport const unfollow = (userID: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userID))\r\n    const response = await usersAPI.unfollow(userID)\r\n    if (response.resultCode === 0) dispatch(acceptUnfollow(userID))\r\n    dispatch(toggleFollowingProgress(false, userID))\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import { createSelector } from 'reselect'\r\nimport { AppStateType } from './store'\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector__BadRender = (state: AppStateType) => {\r\n  return getUsers(state).filter(() => true)\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(() => true)\r\n  },\r\n)\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react'\nimport styles from './Button.module.css'\n\ntype PropTypes = {\n  width?: number\n  onClick?: () => any\n  margin?: string\n}\n\nconst Button: React.FC<PropTypes> = ({ width, children, onClick, margin }) => {\n  return (\n    <button onClick={onClick} style={{ width, margin }} className={styles.button}>{children}</button>\n  )\n}\n\nexport default Button\n","import React, { useState, ChangeEvent } from 'react'\r\nimport styles from './Search.module.css'\r\nimport Button from '../../../common/Button/Button'\r\n\r\ntype PropTypes = {\r\n  setTerm: (term: string) => void\r\n  setCurrentPage: (page: number) => void\r\n  setPortionNumber: (number: number) => void\r\n}\r\n\r\nconst Search = React.memo<PropTypes>(\r\n  ({ setTerm, setCurrentPage, setPortionNumber }) => {\r\n    const [inputText, setInputText] = useState('')\r\n\r\n    const onTextChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setInputText(event.target.value)\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n      setCurrentPage(1)\r\n      setTerm(inputText)\r\n      setPortionNumber(1)\r\n    }\r\n\r\n    const onReset = () => {\r\n      setCurrentPage(1)\r\n      setTerm('')\r\n      setInputText('')\r\n      setPortionNumber(1)\r\n    }\r\n\r\n    const searchButtonStyle = {\r\n      cursor: (inputText) ? 'pointer' : 'not-allowed'\r\n    }\r\n\r\n    return (\r\n      <div className={styles.div}>\r\n        <input placeholder=\"Поиск\" type=\"text\" onChange={onTextChange} className={styles.input} value={inputText}/>\r\n        <button\r\n          disabled={!inputText}\r\n          style={searchButtonStyle}\r\n          onClick={onButtonClick}\r\n          className={styles.button}>\r\n          Найти\r\n        </button>\r\n        <Button margin='0 0 0 10px' onClick={onReset}>Сброс</Button>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport styles from './PaginationItem.module.css'\r\n\r\ntype PropTypes = {\r\n  active: boolean\r\n  number: number\r\n}\r\n\r\nconst PaginationItem: React.FC<PropTypes> = ({ active, number }) => {\r\n  const activeStyle = active ? styles.paginationItemActive : ''\r\n\r\n  return (\r\n    <li className={styles.paginationItem + ' ' + activeStyle} data-number={number}>{number}</li>\r\n  )\r\n}\r\n\r\nexport default PaginationItem\r\n","import React, { useEffect } from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport PaginationItem from './PaginationItem/PaginationItem'\r\n\r\ntype PropTypes = {\r\n  currentPage: number\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  portionSize: number\r\n  getRequestUsers: (pageSize: number, currentPage: number, term: string) => void\r\n  term: string\r\n  setCurrentPage: (page: number) => void\r\n  portionNumber: number\r\n  setPortionNumber: (number: number) => void\r\n}\r\n\r\nconst Paginator = React.memo<PropTypes>(\r\n  ({ setCurrentPage, currentPage, totalUsersCount, pageSize, portionSize, getRequestUsers, term, portionNumber, setPortionNumber }) => {\r\n\r\n    useEffect(() => {\r\n      getRequestUsers(pageSize, currentPage, term)\r\n    }, [getRequestUsers, pageSize, currentPage, term])\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n      getRequestUsers(pageSize, currentPage, term)\r\n      setCurrentPage(currentPage)\r\n    }\r\n\r\n    const pageCount = Math.ceil(totalUsersCount / pageSize)\r\n    const pages = []\r\n\r\n    for (let i = 1; i < totalUsersCount; i++) {\r\n      pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const lastElemPageNumber = pageCount / portionSize * portionSize\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const changePage = (event: any) => {\r\n      const pageNumber = +event.target.dataset.number\r\n\r\n      if (pageNumber) {\r\n        onPageChanged(pageNumber)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div onClick={changePage} className={styles.paginationItems}>\r\n        {\r\n          totalUsersCount > 0 &&\r\n          <button disabled={portionNumber === 1} className={styles.button}\r\n                  onClick={() => {setPortionNumber(portionNumber - 1)}}>Влево</button>\r\n        }\r\n        {\r\n          pages.filter(\r\n            (num) => (num >= leftPortionPageNumber && num <= rightPortionPageNumber && num <= lastElemPageNumber))\r\n            .map((num) => (\r\n              <PaginationItem key={num} number={num} active={+currentPage === num}/>\r\n            ))\r\n        }\r\n        {\r\n          totalUsersCount > 0 &&\r\n          <button disabled={portionCount === portionNumber} className={styles.button}\r\n                  onClick={() => {setPortionNumber(portionNumber + 1)}}>Вправо</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Paginator\r\n","import React from 'react'\r\nimport styles from './User.module.css'\r\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../../../../types/AppTypes'\r\n\r\ntype PropTypes = {\r\n  user: UserType\r\n  followButtonDisabled: boolean\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n}\r\n\r\nfunction User ({ user, followButtonDisabled, unfollow, follow }: PropTypes) {\r\n  return (\r\n    <li className={styles.user}>\r\n      <div className={styles.avatarBox}>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <img src={user.photos.small || defaultAvatar} alt='avatar'/>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={styles.info}>\r\n        <NavLink className={styles.userName} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n        {user.status && <span className={styles.userStatus}>{user.status}</span>}\r\n\r\n        {\r\n          user.followed ? (\r\n            <button\r\n              className={styles.followButton}\r\n              disabled={followButtonDisabled}\r\n              onClick={() => {unfollow(user.id)}}\r\n            >\r\n              Отписаться <span aria-label=\"Отписаться\" role=\"img\">❌</span>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className={styles.followButton}\r\n              disabled={followButtonDisabled}\r\n              onClick={() => {follow(user.id)}}\r\n            >\r\n              Подписаться <span aria-label=\"Подписаться\" role=\"img\">✅</span>\r\n            </button>\r\n          )\r\n        }\r\n\r\n        <NavLink to={`/messages/${user.id}`} className={styles.sendMessage}>Написать сообщение</NavLink>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\nimport styles from './Preloader.module.css'\nimport preloader from '../../../assets/images/preloader.gif'\n\ntype PropTypes = {\n  fullscreen?: boolean\n}\n\nconst Preloader: React.FC<PropTypes> = ({ fullscreen = false }) => {\n  return (fullscreen) ? (\n    <div className={styles.wrapper}>\n      <div className={styles.preloader}>\n        <img className={styles.preloaderIMG} src={preloader} alt='load'/>\n      </div>\n    </div>\n  ) : (\n    <img className={styles.preloaderIMG} src={preloader} alt='load'/>\n  )\n}\n\nexport default Preloader\n","import React from 'react'\r\nimport styles from './UsersList.module.css'\r\nimport User from './User/User'\r\nimport { UserType } from '../../../../types/AppTypes'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\n\r\ntype PropTypes = {\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  isFetching: boolean\r\n}\r\n\r\nconst UsersList = React.memo<PropTypes>(\r\n  ({ users, followingInProgress, follow, unfollow, isFetching }) => {\r\n\r\n    const usersOrMessage = (users.length) ?\r\n      users.map((user) => (\r\n        <User key={user.id}\r\n              user={user}\r\n              followButtonDisabled={followingInProgress.some(id => id === user.id)}\r\n              follow={follow}\r\n              unfollow={unfollow}\r\n        />\r\n      )) : 'Ничего не найдено'\r\n\r\n    return (\r\n      isFetching ? <Preloader/> :\r\n        <ul className={styles.users}>\r\n          {usersOrMessage}\r\n        </ul>\r\n    )\r\n\r\n  }\r\n)\r\n\r\nexport default UsersList\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  getRequestUsers,\r\n  setCurrentPage,\r\n  setIsFetching,\r\n  follow,\r\n  unfollow,\r\n  setTerm,\r\n} from '../../../redux/users-reducer'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getTotalUsersCount,\r\n  getUsersSelector,\r\n} from '../../../redux/users-selectors'\r\nimport { AppStateType } from '../../../redux/store'\r\nimport { UserType } from '../../../types/AppTypes'\r\nimport { compose } from 'redux'\r\nimport Search from './Search/Search'\r\nimport Paginator from './Paginator/Paginator'\r\nimport UsersList from './UsersList/UsersList'\r\n\r\ntype MapStatePropTypes = {\r\n  currentPage: number\r\n  users: Array<UserType>\r\n  totalUsersCount: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number>\r\n  term: string\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  setCurrentPage: (page: number) => void\r\n  setIsFetching: (isFetching: boolean) => void\r\n  getRequestUsers: (pageSize: number, currentPage: number, term: string) => void\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  setTerm: (term: string) => void\r\n}\r\n\r\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\r\n\r\nconst Users: React.FC<PropTypes> = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  isFetching,\r\n  users,\r\n  followingInProgress,\r\n  setCurrentPage,\r\n  follow,\r\n  unfollow,\r\n  setTerm,\r\n  getRequestUsers,\r\n  term,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setCurrentPage(1)\r\n    }\r\n  }, [setCurrentPage])\r\n\r\n  const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n  return (\r\n    <>\r\n      <h1>Пользователи</h1>\r\n      <Search\r\n        setTerm={setTerm}\r\n        setCurrentPage={setCurrentPage}\r\n        setPortionNumber={setPortionNumber}\r\n      />\r\n      <Paginator\r\n        totalUsersCount={totalUsersCount}\r\n        currentPage={currentPage}\r\n        pageSize={6}\r\n        portionSize={10}\r\n        getRequestUsers={getRequestUsers}\r\n        term={term}\r\n        setCurrentPage={setCurrentPage}\r\n        portionNumber={portionNumber}\r\n        setPortionNumber={setPortionNumber}\r\n      />\r\n      <UsersList\r\n        users={users}\r\n        followingInProgress={followingInProgress}\r\n        follow={follow}\r\n        unfollow={unfollow}\r\n        isFetching={isFetching}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    term: state.usersPage.term,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropTypes, MapDispatchPropTypes, unknown, AppStateType>(mapStateToProps, {\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    getRequestUsers,\r\n    follow,\r\n    unfollow,\r\n    setTerm,\r\n  }),\r\n)(Users)\r\n","import React from 'react'\nimport styles from './News.module.css'\n\nfunction News () {\n  return (\n    <div className={styles.messages}>\n      Новости\n    </div>\n  )\n}\n\nexport default News\n","import React from 'react'\nimport styles from './Music.module.css'\n\nfunction Music () {\n  return (\n    <div className={styles.messages}>\n      Музыка\n    </div>\n  )\n}\n\nexport default Music\n","import React from 'react'\nimport styles from './Settings.module.css'\n\nfunction Settings () {\n  return (\n    <div className={styles.messages}>\n      Настройки\n    </div>\n  )\n}\n\nexport default Settings\n","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport function createField (FormElement: any) {\r\n  return function ({ meta, input, ...props }: any) {\r\n    const isError = meta.error && meta.touched\r\n\r\n    return (\r\n      <span className={(isError || null) && styles.error}>\r\n        <FormElement {...input} {...props} />\r\n        {isError && <span>{meta.error}</span>}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n","export const required = (value: string) => {\r\n  if (!value) return 'Поле обязательное'\r\n}\r\n\r\nexport const maxLengthCreator = (length: number) => (value: string) => {\r\n  if (value.length > length) return `Максимальная длина - ${length}`\r\n}\r\n","import { getAuthUserData, setMyProfile } from './auth-reducer'\r\nimport { profileAPI } from '../api/api'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from './store'\r\n\r\n/* Action types */\r\nconst INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED_SUCCESS'\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes = InitializedSuccessType\r\n\r\nfunction initReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype InitializedSuccessType = { type: typeof INITIALIZED_SUCCESS };\r\nexport const initializedSuccess = (): InitializedSuccessType => ({\r\n  type: INITIALIZED_SUCCESS\r\n})\r\n\r\n/* Thunk creators */\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const initializeApp = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(getAuthUserData())\r\n      .then(() => {\r\n        dispatch(getMyProfile()).then(() => {\r\n          dispatch(initializedSuccess())\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getMyProfile = (): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const isAuth = getState().auth.isAuth\r\n    const userID = getState().auth.userId\r\n\r\n    if (isAuth && userID) {\r\n      const response = await profileAPI.getProfile(userID)\r\n      // @ts-ignore\r\n      dispatch(setMyProfile(response))\r\n    }\r\n  }\r\n}\r\n\r\nexport default initReducer\r\n","import { authAPI, securityAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { ProfileType } from '../types/AppTypes'\r\nimport { getMyProfile } from './init-reducer'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from './store'\r\n\r\n/* Action types */\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'samurai-network/auth/GET_CAPTCHA_URL'\r\nconst SET_MY_PROFILE = 'samurai-network/auth/SET_MY_PROFILE'\r\n\r\nconst initialState = {\r\n  userId: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n  captchaUrl: null as string | null,\r\n  myProfile: null as ProfileType | null,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes =\r\n  SetAuthUserDataActionType |\r\n  GetCaptchaUrlSuccessType |\r\n  SetMyProfileType\r\n\r\nfunction authReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n\r\n    case GET_CAPTCHA_URL:\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.captchaUrl,\r\n      }\r\n\r\n    case SET_MY_PROFILE:\r\n      return {\r\n        ...state,\r\n        myProfile: action.profile,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype SetAuthUserDataActionPayloadType = { userId: number | null, email: string | null, login: string | null, isAuth: boolean };\r\ntype SetAuthUserDataActionType = { type: typeof SET_USER_DATA, payload: SetAuthUserDataActionPayloadType };\r\nexport const setAuthUserData = (\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean,\r\n): SetAuthUserDataActionType => (\r\n  { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\r\n)\r\n\r\ntype GetCaptchaUrlSuccessType = { type: typeof GET_CAPTCHA_URL, captchaUrl: string };\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessType => ({\r\n  type: GET_CAPTCHA_URL,\r\n  captchaUrl: captchaUrl,\r\n})\r\n\r\ntype SetMyProfileType = { type: typeof SET_MY_PROFILE, profile: ProfileType }\r\nexport const setMyProfile = (profile: ProfileType): SetMyProfileType => ({\r\n  type: SET_MY_PROFILE,\r\n  profile,\r\n})\r\n\r\n/* Thunk creators */\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getAuthUserData = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const meData = await authAPI.me()\r\n\r\n    if (meData.resultCode === 0) {\r\n      let { id, email, login } = meData.data\r\n      dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if (data.resultCode === 0) {\r\n      dispatch(getAuthUserData()).then(() => {\r\n        dispatch(getMyProfile())\r\n      })\r\n    }\r\n    else {\r\n      // 10 - Captcha is required\r\n      if (data.resultCode === 10) {\r\n        await dispatch(getCaptchaUrl())\r\n      }\r\n\r\n      // @ts-ignore\r\n      dispatch(stopSubmit('login', { _error: data.messages[0] }))\r\n    }\r\n  }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n\r\n    if (response.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await securityAPI.getCaptcha()\r\n    const captchaUrl = response.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { createField } from '../../common/FormsControls/createField'\r\nimport { required } from '../../../utils/validators'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Input = createField('input')\r\n\r\nfunction Login (props) {\r\n  const onSubmit = async (formData) => {\r\n    const { login, password, rememberMe, captcha } = formData\r\n    props.login(login, password, rememberMe, captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to='/profile'/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Авторизация</h1>\r\n      <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction LoginForm ({ handleSubmit, error, captchaUrl }) {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type='text' placeholder='Логин' name='login' component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type='password' placeholder='Пароль' name='password'\r\n          component={Input} validate={[required]}\r\n        />\r\n      </div>\r\n      <Field\r\n        type='checkbox' name='rememberMe' id='rememberMe'\r\n        component={Input} checked\r\n      />\r\n      <label htmlFor='rememberMe'>Запомнить меня</label>\r\n\r\n      {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n      {captchaUrl &&\r\n      <Field\r\n        type='text' placeholder='Капча' name='captcha' component={Input}\r\n        validate={[required]}\r\n      />}\r\n\r\n      {error ? <div style={{ color: 'red' }}>{error}</div> : null}\r\n      <div>\r\n        <button>Войти</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default connect((state) => ({\r\n  isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl\r\n}), { login })(Login)\r\n","const SEND_MESSAGE = 'samurai-network/messages/SEND_MESSAGE'\r\n\r\ntype DialogType = {\r\n  id: number\r\n  username: string\r\n}\r\n\r\ntype MessageType = {\r\n  id: number\r\n  username: string\r\n  message: string\r\n}\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, username: 'Димыч' },\r\n    { id: 2, username: 'Саша' },\r\n    { id: 3, username: 'Валера' },\r\n    { id: 4, username: 'Иван' },\r\n    { id: 5, username: 'Света' },\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    { id: 1, username: 'Димыч', message: 'Я люблю react!' },\r\n    { id: 2, username: 'Димыч', message: 'Я люблю react!' },\r\n  ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nfunction messagesReducer (state = initialState, action: any): InitialStateType {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const nextId = state.messages[state.messages.length - 1].id + 1\r\n      const newMessage = {\r\n        id: nextId,\r\n        username: 'username',\r\n        message: action.formData.message,\r\n      }\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype sendMessageActionCreatorActionType = {\r\n  type: typeof SEND_MESSAGE\r\n  formData: string\r\n}\r\n\r\nexport const sendMessageActionCreator = (formData: string): sendMessageActionCreatorActionType => ({\r\n  type: SEND_MESSAGE,\r\n  formData: formData,\r\n})\r\n\r\nexport default messagesReducer\r\n","import React from 'react'\nimport styles from './Dialog.module.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Dialog (props) {\n  return (\n    <li className={styles.dialog}>\n      <NavLink to={`/messages/${String(props.id)}`}>{props.name}</NavLink>\n    </li>\n  )\n}\n\nexport default Dialog\n","import React from 'react'\nimport styles from './Message.module.css'\n\nfunction Message (props) {\n  return (\n    <li className={styles.chatItem}>\n      <div className={styles.profile}>\n        <img\n          className={styles.avatar}\n          src='https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg'\n          alt='avatar'\n        />\n        <div>{props.name}</div>\n      </div>\n      <div>\n        {props.message}\n      </div>\n    </li>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport styles from './Messages.module.css'\nimport Dialog from './Dialog/Dialog'\nimport Message from './Message/Message'\nimport { Field, reduxForm } from 'redux-form'\nimport { createField } from '../../common/FormsControls/createField'\nimport { maxLengthCreator, required } from '../../../utils/validators'\n\nconst maxLength = maxLengthCreator(10)\nconst Textarea = createField('textarea')\n\nfunction Messages (props) {\n  const dialogsElements = props.state.dialogs.map(\n    dialog => <Dialog key={dialog.id} id={dialog.id} name={dialog.username}/>\n  )\n\n  const messagesElements = props.state.messages.map(\n    message => <Message\n      key={message.id} name={message.username}\n      message={message.message}\n    />\n  )\n\n  return (\n    <div className={styles.messages}>\n      <div className={styles.output}>\n        <ul className={styles.dialogs}>\n          {dialogsElements}\n        </ul>\n        <ul className={styles.chat}>\n          {messagesElements}\n        </ul>\n      </div>\n      <AddMessageFormRedux\n        onSubmit={(formData) => { props.buttonOnClick(formData) }}\n      />\n    </div>\n  )\n}\n\nfunction AddMessageForm (props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name='message' validate={[required, maxLength]}\n          component={Textarea}\n        />\n      </div>\n      <div>\n        <button>Отправить</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'addMessage' })(AddMessageForm)\n\nexport default Messages\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType } from '../redux/store'\r\n\r\nfunction mapStateToPropsForRedirect (state: AppStateType) {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect (Component: React.ComponentType) {\r\n  type PropTypes = {\r\n    isAuth: boolean\r\n  }\r\n\r\n  class RedirectComponent extends React.Component<PropTypes> {\r\n    render () {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n","import { sendMessageActionCreator } from '../../../redux/messages-reducer'\nimport Messages from './Messages'\nimport { connect } from 'react-redux'\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\nfunction mapStateToProps (state) {\n  return {\n    state: state.messagesPage\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    buttonOnClick (formData) {\n      dispatch(sendMessageActionCreator(formData))\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Messages)\n","import { profileAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { PhotosType, PostType, ProfileType } from '../types/AppTypes'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from './store'\r\n\r\n/* Action types */\r\nconst ADD_POST = 'samurai-network/profile/ADD_POST'\r\nconst SET_USER_PROFILE = 'samurai-network/profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'samurai-network/profile/SET_STATUS'\r\nconst SET_PROFILE_PHOTO = 'samurai-network/profile/SET_PROFILE_PHOTO'\r\nconst SET_AVATAR_FETCHING = 'samurai-network/profile/SET_AVATAR_FETCHING'\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, text: 'Вам нравится React?', likes: 4 },\r\n    { id: 2, text: 'hey', likes: 2 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n  avatarIsFetching: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes =\r\n  AddPostActionType |\r\n  SetUserProfileActionType |\r\n  SetStatusActionType |\r\n  setProfilePhotoActionType |\r\n  setAvatarIsFetchingActionType\r\n\r\nfunction profileReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: state.posts[state.posts.length - 1].id + 1,\r\n        text: action.text,\r\n        likes: 0,\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      }\r\n\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      }\r\n\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      }\r\n\r\n    case SET_PROFILE_PHOTO:\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\r\n      }\r\n\r\n    case SET_AVATAR_FETCHING:\r\n      return {\r\n        ...state,\r\n        avatarIsFetching: action.isFetching\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype AddPostActionType = { type: typeof ADD_POST, text: string }\r\nexport const addPost = (formData: { newPost: string }): AddPostActionType => ({\r\n  type: ADD_POST,\r\n  text: formData.newPost\r\n})\r\n\r\ntype SetUserProfileActionType = { type: typeof SET_USER_PROFILE, profile: ProfileType | null }\r\nexport const setUserProfile = (profile: ProfileType | null): SetUserProfileActionType => ({\r\n  type: SET_USER_PROFILE,\r\n  profile: profile\r\n})\r\n\r\ntype SetStatusActionType = { type: typeof SET_STATUS, status: string }\r\nexport const setStatus = (status: string): SetStatusActionType => ({\r\n  type: SET_STATUS,\r\n  status: status\r\n})\r\n\r\ntype setProfilePhotoActionType = { type: typeof SET_PROFILE_PHOTO, photos: PhotosType }\r\nexport const setProfilePhoto = (photos: PhotosType): setProfilePhotoActionType => ({\r\n  type: SET_PROFILE_PHOTO,\r\n  photos: photos\r\n})\r\n\r\ntype setAvatarIsFetchingActionType = { type: typeof SET_AVATAR_FETCHING, isFetching: boolean }\r\nexport const setAvatarIsFetching = (isFetching: boolean): setAvatarIsFetchingActionType => ({\r\n  type: SET_AVATAR_FETCHING,\r\n  isFetching\r\n})\r\n\r\n/* Thunk creators */\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getUsersProfile = (userID: number | null): ThunkType => {\r\n  return async (dispatch) => {\r\n    if (userID) {\r\n      dispatch(setUserProfile(null))\r\n      const response = await profileAPI.getProfile(userID)\r\n      dispatch(setUserProfile(response))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response))\r\n  }\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.resultCode === 0) {\r\n      dispatch(setStatus(status))\r\n    }\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: any): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updatePhoto(file)\r\n    if (response.resultCode === 0) {\r\n      dispatch(setProfilePhoto(response.data.photos))\r\n      dispatch(setAvatarIsFetching(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const response = await profileAPI.updateProfile(profile)\r\n    if (response.resultCode === 0) {\r\n      await dispatch(getUsersProfile(getState().auth.userId))\r\n    }\r\n    else {\r\n      // @ts-ignore\r\n      dispatch(stopSubmit('edit-profile', { _error: response.messages[0] }))\r\n      return Promise.reject()\r\n    }\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n","import React from 'react'\nimport styles from './Avatar.module.css'\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png'\nimport Preloader from '../../../../common/Preloader/Preloader'\n\nfunction Avatar ({ isOwner, savePhoto, profile, setAvatarIsFetching, avatarIsFetching }) {\n  const uploadLabel = React.createRef()\n\n  function onUploadPhoto (e) {\n    if (e.target.files.length) {\n      const photo = e.target.files[0]\n      uploadLabel.current.textContent = photo.name\n      setAvatarIsFetching(true)\n      savePhoto(photo)\n    }\n  }\n\n  return (\n    <div className={styles.avatar}>\n      <div className={styles.avatarWrapper}>\n        {\n          avatarIsFetching ? <Preloader/> : (\n            <img\n              className={styles.avatarIMG}\n              src={profile.photos.large || defaultAvatar} alt='avatar'\n            />\n          )\n        }\n      </div>\n      {\n        isOwner &&\n        <div className={styles.upload}>\n          <input className={styles.uploadInput} onChange={onUploadPhoto} type='file' id='UserPhotoUpload'/>\n          <label\n            ref={uploadLabel}\n            className={styles.uploadLabel}\n            htmlFor='UserPhotoUpload'\n          >\n            Обновить фотографию\n          </label>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Avatar\n","import React, { useEffect, useState } from 'react'\nimport styles from './Status.module.css'\n\ntype PropTypes = {\n  status: string\n  updateStatus: (status: string) => void\n  isOwner: boolean\n}\n\nconst Status: React.FC<PropTypes> = ({ status, updateStatus, isOwner }) => {\n  const [editMode, setEditMode] = useState(false)\n  const [localStatus, setLocalStatus] = useState(status)\n\n  useEffect(() => {\n    setLocalStatus(status)\n  }, [status])\n\n  const activateEditMode = () => {setEditMode(true)}\n  const deactivateEditMode = () => {setEditMode(false)}\n\n  const onUpdateStatus = () => {\n    deactivateEditMode()\n    updateStatus(localStatus)\n  }\n\n  const onStatusChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLocalStatus(event.currentTarget.value)\n  }\n\n  const selectInputText = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.currentTarget.select()\n  }\n\n  const statusClass = ((status) ? styles.statusExist : styles.statusNotExist) + ' ' + styles.status\n\n  return (\n    <div className={styles.statusBox}>\n      {\n        !editMode ? (\n          (isOwner && <button className={statusClass} onClick={activateEditMode}>{status || 'изменить статус'}</button>)\n          || <div className={styles.statusNotMe}>{status}</div>\n        ) : (\n          <input\n            autoFocus\n            onChange={onStatusChange}\n            onBlur={onUpdateStatus}\n            onFocus={selectInputText}\n            type=\"text\"\n            value={localStatus}\n            className={styles.statusInput}\n          />\n        )\n      }\n    </div>\n  )\n}\n\nexport default Status\n","import React from 'react'\nimport styles from './Input.module.css'\n\ntype PropTypes = {\n  width?: number\n  margin?: string\n  placeholder: string\n  meta: any\n  input: any\n  type: string\n  id: string\n}\n\nconst Input: React.FC<PropTypes> = ({ width, margin, placeholder, meta, input, type, id }) => {\n  const isError = meta.error && meta.touched\n\n  return (\n    <span className={(isError || null) && styles.error}>\n      {isError && <span>{meta.error}</span>}\n      <input\n        {...input}\n        id={id}\n        type={type}\n        style={{ width, margin }}\n        className={styles.input}\n        placeholder={placeholder}\n      />\n    </span>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport styles from './Textarea.module.css'\n\ntype PropTypes = {\n  width?: number\n  margin?: string\n  placeholder?: string\n  rows?: number\n  cols?: number\n  meta: any\n  input: any\n  id: string\n}\n\nconst Textarea: React.FC<PropTypes> = ({ width, margin, placeholder, rows = 1, cols, meta, input, id }) => {\n  const isError = meta.error && meta.touched\n\n  return (\n    <span className={(isError || null) && styles.error}>\n      {isError && <span>{meta.error}</span>}\n      <textarea\n        {...input}\n        rows={rows}\n        cols={cols}\n        style={{ width, margin }}\n        className={styles.textarea}\n        placeholder={placeholder}\n        id={id}\n      />\n    </span>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\r\nimport { required } from '../../../../../../utils/validators'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Button from '../../../../../common/Button/Button'\r\nimport Input from '../../../../../common/Input/Input'\r\nimport Textarea from '../../../../../common/Textarea/Textarea'\r\nimport styles from './ProfileDataForm.module.css'\r\n\r\nfunction ProfileDataForm ({ handleSubmit, error, profile }) {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      {error && <div className={styles.error}>{error}</div>}\r\n\r\n      <h3>Основная информация</h3>\r\n\r\n      <div className={styles.aboutMe}>\r\n        <div>\r\n          <label htmlFor='dataFormName'>ФИО:</label>\r\n          <Field\r\n            type='text'\r\n            width='300px'\r\n            placeholder='Имя'\r\n            name='fullName'\r\n            component={Input}\r\n            validate={[required]}\r\n            id='dataFormName'\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor='dataFormWork'>Ищите работу:</label>\r\n          <Field type='checkbox' name='lookingForAJob' component={Input} id='dataFormWork'/>\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor='dataFormSkills'>Ваши навыки:</label>\r\n          <Field\r\n            rows={2}\r\n            width='300px'\r\n            name='lookingForAJobDescription'\r\n            component={Textarea}\r\n            validate={[required]}\r\n            id='dataFormSkills'\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor='dataFormAbout'>О Вас:</label>\r\n          <Field rows={2} width='300px' name='aboutMe' component={Textarea} validate={[required]} id='dataFormAbout'/>\r\n        </div>\r\n      </div>\r\n\r\n      <hr/>\r\n\r\n      <h3>Ваши контакты</h3>\r\n\r\n      <div className={styles.myContacts}>\r\n        {\r\n          Object.keys(profile.contacts).map(key => (\r\n            <div key={key}>\r\n              <label htmlFor={'dataForm' + key}>{key[0].toUpperCase() + key.slice(1)}:</label>\r\n              <Field\r\n                type='text'\r\n                width='300px'\r\n                name={'contacts.' + key}\r\n                component={Input}\r\n                id={'dataForm' + key}\r\n              />\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <Button>Сохранить</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n","import React from 'react'\nimport styles from './ProfileData.module.css'\n\nfunction ProfileData ({ profile }) {\n  const isContactsExists = Object.values(profile.contacts).some((contact) => (contact !== null))\n\n  return (\n    <dl className={styles.about}>\n      <div>\n        <dt>Ищу работу:</dt>\n        <dd> {profile.lookingForAJob ? 'да' : 'нет'}</dd>\n      </div>\n\n      <div>\n        <dt>Мои навыки:</dt>\n        <dd> {profile.lookingForAJobDescription || 'нету'}</dd>\n      </div>\n\n      <div>\n        <dt>Обо мне:</dt>\n        <dd> {profile.aboutMe || 'не заполнено'}</dd>\n      </div>\n\n      {isContactsExists && <hr/>}\n\n      {\n        isContactsExists && (\n          <div className={styles.contacts}>\n            <dt>Мои контакты:</dt>\n            <dd>\n              <dl className={styles.contactsList}>\n                {\n                  Object.entries(profile.contacts).map((contact) => {\n                    const key = contact[0]\n                    const value = contact[1]\n\n                    return (value) ? (\n                      <div key={key}>\n                        <dt>{key}:</dt>\n                        <dd>\n                          <a rel='noopener noreferrer' target='_blank' href={profile.contacts[key]}>\n                            {profile.contacts[key]}\n                          </a>\n                        </dd>\n                      </div>\n                    ) : null\n                  })\n                }\n              </dl>\n            </dd>\n          </div>\n        )\n      }\n    </dl>\n  )\n}\n\nexport default ProfileData\n","import React, { useState } from 'react'\nimport styles from './UserInfo.module.css'\nimport Status from './Status/Status'\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\nimport ProfileData from './ProfileData/ProfileData'\nimport Button from '../../../../common/Button/Button'\n\nfunction UserInfo ({ profile, status, isOwner, saveProfile, updateStatus }) {\n  const [editMode, setEditMode] = useState(false)\n\n  function onSubmit (formData) {\n    saveProfile(formData).then(() => {\n      setEditMode(false)\n    })\n  }\n\n  return (\n    <div className={styles.info}>\n      <div>\n        <h1 className={styles.userName}>{profile.fullName}</h1>\n        <Status status={status} updateStatus={updateStatus} isOwner={isOwner}/>\n\n        {(status || isOwner) && <hr/>}\n\n        {\n          editMode ? <ProfileDataForm profile={profile} initialValues={profile} onSubmit={onSubmit}/> :\n            <ProfileData isOwner={isOwner} profile={profile}/>\n        }\n      </div>\n\n      {isOwner && !editMode && <div><Button onClick={() => { setEditMode(true) }}>Редактировать</Button></div>}\n    </div>\n  )\n}\n\nexport default UserInfo\n","import React from 'react'\nimport Preloader from '../../../common/Preloader/Preloader'\nimport Avatar from './Avatar/Avatar'\nimport UserInfo from './UserInfo/UserInfo'\n\nfunction User ({\n  profile, savePhoto, status, updateStatus, isOwner, saveProfile, avatarIsFetching, setAvatarIsFetching\n}) {\n\n  if (!profile) {\n    return <Preloader/>\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Avatar\n        savePhoto={savePhoto}\n        profile={profile}\n        isOwner={isOwner}\n        avatarIsFetching={avatarIsFetching}\n        setAvatarIsFetching={setAvatarIsFetching}\n      />\n\n      <UserInfo\n        status={status}\n        updateStatus={updateStatus}\n        saveProfile={saveProfile}\n        profile={profile}\n        isOwner={isOwner}\n      />\n    </div>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport styles from './Post.module.css'\n\nfunction Post (props) {\n  return (\n    <div className={styles.post}>\n      <div>\n        <img className={styles.avatar} src='https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg' alt='' />\n      </div>\n      <div className={styles.message}>\n        <div>\n          {props.text}\n        </div>\n        <div>\n          {props.likes}♥\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport styles from './Posts.module.css'\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../../utils/validators'\nimport { createField } from '../../../common/FormsControls/createField'\nimport Button from '../../../common/Button/Button'\n\nconst maxLength = maxLengthCreator(10)\nconst Textarea = createField('textarea')\n\nfunction Posts (props) {\n  const postsElements = props.state.profilePage.posts.map(\n    post => <Post key={post.id} text={post.text} likes={post.likes} />\n  ).reverse()\n\n  return (\n    <div className={styles.posts}>\n      <h2 className={styles.title}>Посты</h2>\n      <AddNewPostFormRedux onSubmit={(formData) => { props.addPost(formData) }} />\n      <div className={styles.postsList}>\n        {postsElements}\n      </div>\n    </div>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddNewPost' })(AddNewPostForm)\n\nfunction AddNewPostForm (props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          className={styles.textarea} name='newPost' component={Textarea} placeholder='Что у вас нового?'\n          validate={[required, maxLength]}\n        />\n      </div>\n      <div>\n        <Button margin='10px 0 0 0' className={styles.button}>Отправить</Button>\n      </div>\n    </form>\n  )\n}\n\nexport default Posts\n","import { addPost } from '../../../../redux/profile-reducer'\nimport Posts from './Posts'\nimport { connect } from 'react-redux'\n\nfunction mapStateToProps (state) {\n  return {\n    state: state\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    addPost (formData) {\n      dispatch(addPost(formData))\n    }\n  }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\n\nexport default PostsContainer\n","import React, { useEffect } from 'react'\r\nimport {\r\n  getStatus,\r\n  getUsersProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n  setAvatarIsFetching\r\n} from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { ProfileType } from '../../../types/AppTypes'\r\nimport User from './User/User'\r\nimport PostsContainer from './Posts/PostsContainer'\r\nimport { AppStateType } from '../../../redux/store'\r\n\r\ntype PathParamsType = {\r\n  userID: string\r\n}\r\n\r\ntype MapStatePropTypes = {\r\n  userID: number | null\r\n  profile: ProfileType | null\r\n  status: string\r\n  avatarIsFetching: boolean\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  getUsersProfile: (userID: number) => void\r\n  getStatus: (userID: number) => void\r\n  savePhoto: (photo: Blob) => void\r\n  updateStatus: (newStatus: string) => void\r\n  saveProfile: (profile: ProfileType) => void\r\n  setAvatarIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\ntype PropTypes = RouteComponentProps<PathParamsType> & MapStatePropTypes & MapDispatchPropTypes\r\n\r\nconst Profile: React.FC<PropTypes> = ({\r\n  savePhoto,\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  saveProfile,\r\n  match,\r\n  userID,\r\n  history,\r\n  getUsersProfile,\r\n  getStatus,\r\n  avatarIsFetching,\r\n  setAvatarIsFetching,\r\n}) => {\r\n\r\n  const userURL = +match.params.userID || userID || +history.push('/login')\r\n  const isOwner = userID === userURL\r\n\r\n  useEffect(() => {\r\n    const updateProfile = () => {\r\n      if (userURL) {\r\n        getUsersProfile(userURL)\r\n        getStatus(userURL)\r\n      }\r\n    }\r\n\r\n    updateProfile()\r\n  }, [userURL, getUsersProfile, getStatus])\r\n\r\n  return (\r\n    <>\r\n      <User\r\n        savePhoto={savePhoto}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        isOwner={isOwner}\r\n        saveProfile={saveProfile}\r\n        avatarIsFetching={avatarIsFetching}\r\n        setAvatarIsFetching={setAvatarIsFetching}\r\n      />\r\n      <PostsContainer/>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userID: state.auth.userId,\r\n    avatarIsFetching: state.profilePage.avatarIsFetching,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropTypes, MapDispatchPropTypes, unknown, AppStateType>(mapStateToProps, {\r\n    getUsersProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    setAvatarIsFetching,\r\n  }),\r\n  withRouter,\r\n)(Profile)\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport styles from './Main.module.css'\r\nimport Users from './Users/Users'\r\nimport News from './News/News'\r\nimport Music from './Music/Music'\r\nimport Settings from './Settings/Settings'\r\nimport Login from './Login/Login'\r\nimport MessagesContainer from './Messages/MessagesContainer'\r\nimport Profile from './Profile/Profile'\r\n\r\nfunction Main () {\r\n  return (\r\n    <div className={styles.content}>\r\n      <Switch>\r\n        <Route exact path='/' render={() => <Redirect to='/profile'/>}/>\r\n        // @ts-ignore\r\n        <Route path='/profile/:userID?' render={() => <Profile/>}/>\r\n        <Route path='/messages' render={() => <MessagesContainer/>}/>\r\n        <Route path='/users' render={() => <Users/>}/>\r\n        <Route path='/news' component={News}/>\r\n        <Route path='/music' component={Music}/>\r\n        <Route path='/settings' component={Settings}/>\r\n        <Route path='/login' render={() => <Login/>}/>\r\n        <Route path='*' render={() => '404'}/>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\nimport { logout } from '../../redux/auth-reducer'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../../redux/store'\nimport styles from './Header.module.css'\nimport Button from '../common/Button/Button'\nimport { NavLink } from 'react-router-dom'\nimport { ProfileType } from '../../types/AppTypes'\n\ntype MapStatePropTypes = {\n  isAuth: boolean\n  myProfile: ProfileType | null\n}\n\ntype MapDispatchPropTypes = {\n  logout: () => void\n}\n\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\n\nconst Header: React.FC<PropTypes> = ({ isAuth, logout, myProfile }) => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.container}>\n        <div>Samurai-Network</div>\n        {\n          isAuth && myProfile && myProfile.photos.small ? (\n              <div className={styles.infoMe}>\n                <NavLink to='/profile' className={styles.userName}>\n                  <span>\n                    {myProfile.fullName.split(' ')[0]}\n                  </span>\n                </NavLink>\n                <NavLink to='/profile' className={styles.avatar}>\n                  <img src={myProfile.photos.small} alt='avatar'/>\n                </NavLink>\n                <Button onClick={logout}>Выйти</Button>\n              </div>\n            )\n            : (\n              <NavLink to='/login' className={styles.login}>\n                <Button>Авторизоваться</Button>\n              </NavLink>\n            )\n        }\n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropTypes => ({\n  isAuth: state.auth.isAuth,\n  myProfile: state.auth.myProfile\n})\n\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, Object, AppStateType>(mapStateToProps, {\n  logout,\n})(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport styles from './App.module.css'\nimport Footer from './Footer/Footer'\nimport Sidebar from './Sidebar/Sidebar'\nimport Main from './Main/Main'\nimport Header from './Header/Header'\nimport { initializeApp } from '../redux/init-reducer'\nimport { AppStateType } from '../redux/store'\nimport { HashRouter } from 'react-router-dom'\nimport Preloader from './common/Preloader/Preloader'\n\ntype MapStatePropTypes = {\n  initialized: boolean\n}\n\ntype MapDispatchPropTypes = {\n  initializeApp: () => void\n}\n\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\n\nconst App: React.FC<PropTypes> = ({ initializeApp, initialized }) => {\n  useEffect(() => {\n    initializeApp()\n  }, [initializeApp])\n\n  if (!initialized) {\n    return <Preloader fullscreen/>\n  }\n\n  return (\n    <HashRouter>\n      <div className={styles.page}>\n        <Header/>\n        <main className={styles.main}>\n          <Sidebar/>\n          <Main/>\n        </main>\n        <Footer/>\n      </div>\n    </HashRouter>\n  )\n}\n\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\n  return {\n    initialized: state.init.initialized\n  }\n}\n\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, Object, AppStateType>(\n  mapStateToProps, { initializeApp }\n)(App)\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport messagesReducer from './messages-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport initReducer from './init-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  init: initReducer,\r\n  form: formReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nexport default store\r\n","import * as serviceWorker from './serviceWorker'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__212y-\",\"avatarIMG\":\"Avatar_avatarIMG__1-LTa\",\"upload\":\"Avatar_upload__3w34x\",\"uploadInput\":\"Avatar_uploadInput__3u7cW\",\"uploadLabel\":\"Avatar_uploadLabel__2Exb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBox\":\"Status_statusBox__3qS3R\",\"status\":\"Status_status__1ZDrO\",\"statusNotExist\":\"Status_statusNotExist__2Ayt_\",\"statusExist\":\"Status_statusExist__2EA9K\",\"statusInput\":\"Status_statusInput__2o4UG\",\"statusNotMe\":\"Status_statusNotMe__22woT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2CR8J\",\"container\":\"Header_container__HDvgl\",\"userName\":\"Header_userName__3dpGW\",\"avatar\":\"Header_avatar__34Ghc\",\"infoMe\":\"Header_infoMe__UMQTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__epRJ6\",\"title\":\"Posts_title__3oTfI\",\"textarea\":\"Posts_textarea__1CXXA\",\"button\":\"Posts_button__3XZT1\",\"postsList\":\"Posts_postsList__3exEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderIMG\":\"Preloader_preloaderIMG__BZHNf\",\"wrapper\":\"Preloader_wrapper__1pJ8g\",\"preloader\":\"Preloader_preloader__oGcz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__sE-hE\",\"output\":\"Messages_output__3DU-1\",\"dialogs\":\"Messages_dialogs__2NDBb\",\"chat\":\"Messages_chat__3KJVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__2KiwA\",\"myContacts\":\"ProfileDataForm_myContacts__3GBy1\",\"aboutMe\":\"ProfileDataForm_aboutMe__2_Y6I\",\"error\":\"ProfileDataForm_error__1DhlD\"};","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.b4b85090.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Search_div__2HjV8\",\"input\":\"Search_input__1SF7g\",\"button\":\"Search_button__tmFR-\",\"reset\":\"Search_reset__2G7ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItems\":\"Paginator_paginationItems__2iECZ\",\"button\":\"Paginator_button__1_Jp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatItem\":\"Message_chatItem__1I8h1\",\"profile\":\"Message_profile__PfNrB\",\"avatar\":\"Message_avatar__2V5Z4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ProfileData_contactsList__ZEb2E\",\"about\":\"ProfileData_about__2NVys\",\"contacts\":\"ProfileData_contacts__KLq0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__lASZN\",\"avatar\":\"Post_avatar__3eC36\",\"message\":\"Post_message__3tS2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__4Klr-\",\"main\":\"App_main__1nCkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItem\":\"PaginationItem_paginationItem__1EdWb\",\"paginationItemActive\":\"PaginationItem_paginationItemActive__1EfE6\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.584b607f.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__zWzay\",\"userName\":\"UserInfo_userName__2HoIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3Rg3-\",\"error\":\"Input_error__36SvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__32chH\",\"error\":\"Textarea_error__1Ernb\"};"],"sourceRoot":""}