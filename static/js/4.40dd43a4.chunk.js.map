{"version":3,"sources":["components/Content/Messages/Messages.module.css","components/Content/Messages/Dialog/Dialog.module.css","components/Content/Messages/Message/Message.module.css","components/Content/Messages/Dialog/Dialog.jsx","components/Content/Messages/Message/Message.jsx","components/Content/Messages/Messages.jsx","hoc/withAuthRedirect.tsx","components/Content/Messages/MessagesContainer.jsx"],"names":["module","exports","Dialog","props","className","styles","dialog","to","String","id","name","Message","chatItem","profile","avatar","src","alt","message","maxLength","maxLengthCreator","Textarea","createField","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Messages","dialogsElements","state","dialogs","map","key","username","messagesElements","messages","output","chat","formData","buttonOnClick","mapStateToPropsForRedirect","isAuth","auth","compose","connect","messagesPage","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,QAAU,0BAA0B,KAAO,yB,oBCArID,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,iHCWpFC,MARf,SAAiBC,GACf,OACE,wBAAIC,UAAWC,IAAOC,QACpB,kBAAC,IAAD,CAASC,GAAE,oBAAeC,OAAOL,EAAMM,MAAQN,EAAMO,Q,kBCc5CC,MAlBf,SAAkBR,GAChB,OACE,wBAAIC,UAAWC,IAAOO,UACpB,yBAAKR,UAAWC,IAAOQ,SACrB,yBACET,UAAWC,IAAOS,OAClBC,IAAI,gEACJC,IAAI,WAEN,6BAAMb,EAAMO,OAEd,6BACGP,EAAMc,W,kCCPTC,EAAYC,YAAiB,IAC7BC,EAAWC,YAAY,YA+C7B,IAAMC,EAAsBC,YAAU,CAAEC,KAAM,cAAlBD,EAhB5B,SAAyBpB,GACvB,OACE,0BAAMsB,SAAUtB,EAAMuB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEjB,KAAK,UAAUkB,SAAU,CAACC,IAAUX,GACpCY,UAAWV,KAGf,6BACE,+FAQOW,EA/Cf,SAAmB5B,GACjB,IAAM6B,EAAkB7B,EAAM8B,MAAMC,QAAQC,KAC1C,SAAA7B,GAAM,OAAI,kBAAC,EAAD,CAAQ8B,IAAK9B,EAAOG,GAAIA,GAAIH,EAAOG,GAAIC,KAAMJ,EAAO+B,cAG1DC,EAAmBnC,EAAM8B,MAAMM,SAASJ,KAC5C,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CACTmB,IAAKnB,EAAQR,GAAIC,KAAMO,EAAQoB,SAC/BpB,QAASA,EAAQA,aAIrB,OACE,yBAAKb,UAAWC,IAAOkC,UACrB,yBAAKnC,UAAWC,IAAOmC,QACrB,wBAAIpC,UAAWC,IAAO6B,SACnBF,GAEH,wBAAI5B,UAAWC,IAAOoC,MACnBH,IAGL,kBAAChB,EAAD,CACEG,SAAU,SAACiB,GAAevC,EAAMwC,cAAcD,Q,wDC7BtD,SAASE,EAA4BX,GACnC,MAAO,CACLY,OAAQZ,EAAMa,KAAKD,Q,WCkBRE,sBACbC,aApBF,SAA0Bf,GACxB,MAAO,CACLA,MAAOA,EAAMgB,iBAIjB,SAA6BC,GAC3B,MAAO,CACLP,cADK,SACUD,GACbQ,EAASC,YAAyBT,UDJjC,SAA2BU,GAAiC,IAK3DC,EAL0D,iLAO5D,OAAKC,KAAKnD,MAAM0C,OACT,kBAACO,EAAcE,KAAKnD,OADI,kBAAC,IAAD,CAAUI,GAAG,eAPgB,GAKhCgD,IAAMH,WAOtC,OAAOJ,YAAQJ,EAARI,CAAoCK,KCE9BN,CAGbhB","file":"static/js/4.40dd43a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2WosV\",\"output\":\"Messages_output__248O2\",\"dialogs\":\"Messages_dialogs__3vxNW\",\"chat\":\"Messages_chat__1jnvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1TBUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatItem\":\"Message_chatItem__1uDfr\",\"profile\":\"Message_profile__2ZXh3\",\"avatar\":\"Message_avatar__1ezTO\"};","import React from 'react'\nimport styles from './Dialog.module.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Dialog (props) {\n  return (\n    <li className={styles.dialog}>\n      <NavLink to={`/messages/${String(props.id)}`}>{props.name}</NavLink>\n    </li>\n  )\n}\n\nexport default Dialog\n","import React from 'react'\nimport styles from './Message.module.css'\n\nfunction Message (props) {\n  return (\n    <li className={styles.chatItem}>\n      <div className={styles.profile}>\n        <img\n          className={styles.avatar}\n          src='https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg'\n          alt='avatar'\n        />\n        <div>{props.name}</div>\n      </div>\n      <div>\n        {props.message}\n      </div>\n    </li>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport styles from './Messages.module.css'\nimport Dialog from './Dialog/Dialog'\nimport Message from './Message/Message'\nimport { Field, reduxForm } from 'redux-form'\nimport { createField } from '../../common/FormsControls/createField'\nimport { maxLengthCreator, required } from '../../../utils/validators'\n\nconst maxLength = maxLengthCreator(10)\nconst Textarea = createField('textarea')\n\nfunction Messages (props) {\n  const dialogsElements = props.state.dialogs.map(\n    dialog => <Dialog key={dialog.id} id={dialog.id} name={dialog.username} />\n  )\n\n  const messagesElements = props.state.messages.map(\n    message => <Message\n      key={message.id} name={message.username}\n      message={message.message}\n               />\n  )\n\n  return (\n    <div className={styles.messages}>\n      <div className={styles.output}>\n        <ul className={styles.dialogs}>\n          {dialogsElements}\n        </ul>\n        <ul className={styles.chat}>\n          {messagesElements}\n        </ul>\n      </div>\n      <AddMessageFormRedux\n        onSubmit={(formData) => { props.buttonOnClick(formData) }}\n      />\n    </div>\n  )\n}\n\nfunction AddMessageForm (props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name='message' validate={[required, maxLength]}\n          component={Textarea}\n        />\n      </div>\n      <div>\n        <button>Отправить</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'addMessage' })(AddMessageForm)\n\nexport default Messages\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType } from '../redux/store'\r\n\r\nfunction mapStateToPropsForRedirect (state: AppStateType) {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect (Component: React.ComponentType) {\r\n  type PropTypes = {\r\n    isAuth: boolean\r\n  }\r\n\r\n  class RedirectComponent extends React.Component<PropTypes> {\r\n    render () {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n","import { sendMessageActionCreator } from '../../../redux/messages-reducer'\nimport Messages from './Messages'\nimport { connect } from 'react-redux'\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\nfunction mapStateToProps (state) {\n  return {\n    state: state.messagesPage\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    buttonOnClick (formData) {\n      dispatch(sendMessageActionCreator(formData))\n    }\n  }\n}\n\n/*\nlet AuthRedirectComponent = withAuthRedirect(Messages);\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default MessagesContainer; */\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Messages)\n"],"sourceRoot":""}