{"version":3,"sources":["components/Sidebar/Menu/Menu.module.css","assets/images/defaultAvatar.png","api/api.ts","redux/messages-reducer.ts","components/Footer/Footer.module.css","components/Sidebar/Sidebar.module.css","components/Main/Main.module.css","components/Main/Users/UsersList/UsersList.module.css","components/common/FormsControls/FormsControls.module.css","components/common/Button/Button.module.css","components/Main/Users/UsersList/User/User.module.css","serviceWorker.ts","components/Footer/Footer.tsx","components/Sidebar/Menu/Menu.tsx","components/Sidebar/Sidebar.tsx","redux/users-reducer.ts","redux/users-selectors.ts","components/Main/Users/Search/Search.tsx","components/Main/Users/Paginator/PaginationItem/PaginationItem.tsx","components/Main/Users/Paginator/Paginator.tsx","components/Main/Users/UsersList/User/User.tsx","components/Main/Users/UsersList/UsersList.tsx","components/Main/Users/Users.tsx","components/Main/News/News.tsx","components/Main/Music/Music.tsx","components/Main/Settings/Settings.tsx","redux/init-reducer.ts","redux/auth-reducer.ts","components/Main/Login/Login.jsx","hoc/withSuspense.tsx","components/Main/Main.tsx","components/common/Button/Button.tsx","components/Header/Header.tsx","components/App.tsx","redux/store.ts","index.tsx","components/Header/Header.module.css","components/common/Preloader/Preloader.tsx","components/Main/Users/Search/Search.module.css","components/common/Preloader/Preloader.module.css","utils/validators.ts","components/Main/Users/Paginator/Paginator.module.css","components/App.module.css","components/Main/Users/Paginator/PaginationItem/PaginationItem.module.css","assets/images/preloader.gif","components/common/FormsControls/createField.tsx","redux/profile-reducer.ts"],"names":["module","exports","server","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","count","page","term","get","res","data","isFollowing","userID","follow","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","updateProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","SEND_MESSAGE","initialState","dialogs","id","username","messages","message","sendMessageActionCreator","type","messagesReducer","state","action","newMessage","length","Boolean","window","location","hostname","match","Footer","className","styles","footer","Menu","menu","menuItem","exact","to","menuLink","activeClassName","active","Sidebar","aside","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_TERM","users","totalUsersCount","currentPage","isFetching","followingInProgress","acceptFollow","acceptUnfollow","setUsers","setTotalUsers","totalUsers","setIsFetching","toggleFollowingProgress","userId","_followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","map","user","followed","filter","usersPage","getUsersSelector","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Search","React","memo","setTerm","setCurrentPage","setPortionNumber","useState","inputText","setInputText","searchButtonStyle","cursor","div","placeholder","onChange","event","target","value","input","disabled","style","onClick","button","reset","PaginationItem","number","activeStyle","paginationItemActive","paginationItem","data-number","Paginator","pageSize","portionSize","getRequestUsers","portionNumber","useEffect","pageCount","Math","ceil","pages","i","push","portionCount","lastElemPageNumber","leftPortionPageNumber","rightPortionPageNumber","pageNumber","dataset","onPageChanged","paginationItems","num","key","User","followButtonDisabled","avatarBox","src","photos","small","defaultAvatar","alt","info","userName","name","userStatus","followButton","aria-label","role","sendMessage","UsersList","usersOrMessage","some","Preloader","compose","connect","getState","response","items","totalCount","bind","News","Music","Settings","INITIALIZED_SUCCESS","initialized","getMyProfile","auth","isAuth","setMyProfile","initReducer","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","SET_MY_PROFILE","captchaUrl","myProfile","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","meData","getCaptchaUrl","url","authReducer","Input","createField","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","validate","required","checked","htmlFor","color","then","stopSubmit","_error","props","withSuspense","Component","Suspense","fallback","MessagesContainer","lazy","ProfileContainer","Main","content","path","render","Button","width","children","header","container","infoMe","fullName","split","avatar","init","initializeApp","StrictMode","main","fullscreen","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","wrapper","preloader","preloaderIMG","maxLengthCreator","FormElement","meta","isError","touched","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","text","likes","addPostActionCreator","newPost","setStatus","getUsersProfile","savePhoto","file","saveProfile","Promise","reject","postId"],"mappings":"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","file":"static/js/main.7d4df12c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__27qdF\",\"menuLink\":\"Menu_menuLink__EHAtu\",\"active\":\"Menu_active__2D1vX\"};","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.b4b85090.png\";","import axios from 'axios'\r\nimport {\r\n  GetUsersResponse,\r\n  OperationResult,\r\n  SavePhotoResponse,\r\n  MeResponse,\r\n  LoginResponse,\r\n  GetCaptchaResponse,\r\n  GetAllDialogsResponse,\r\n  GetDialogResponse, SendMessageResponse, messagesNewerThanDateResponse\r\n} from '../types/APITypes'\r\nimport { ProfileType } from '../types/AppTypes'\r\n\r\nconst server = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    // ca3b0eb4-4af6-4803-8caa-f7d26464a12c main\r\n    // a7da6dad-5c4f-417c-a0d9-8d30ee0d96ec secondary\r\n    'API-KEY': 'ca3b0eb4-4af6-4803-8caa-f7d26464a12c',\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  async getUsers (count: number, page: number, term = '') {\r\n    const res = await server.get<GetUsersResponse>(`users?count=${count}&page=${page}&term=${term}`)\r\n    return res.data\r\n  },\r\n  async isFollowing (userID: number) {\r\n    const res = await server.get<boolean>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n  async follow (userID: number) {\r\n    const res = await server.post<OperationResult>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n  async unfollow (userID: number) {\r\n    const res = await server.delete<OperationResult>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  async getProfile (userID: number) {\r\n    const res = await server.get<ProfileType>(`profile/${userID}`)\r\n    return res.data\r\n  },\r\n  async getStatus (userID: number) {\r\n    const res = await server.get<string>(`profile/status/${userID}`)\r\n    return res.data\r\n  },\r\n  async updateStatus (status: string) {\r\n    const res = await server.put<OperationResult>(`profile/status`, { status: status })\r\n    return res.data\r\n  },\r\n  async updatePhoto (photoFile: File) {\r\n    const formData = new FormData()\r\n    formData.append(`image`, photoFile)\r\n\r\n    const res = await server.put<SavePhotoResponse>(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type':\r\n          'multipart/form-data'\r\n      }\r\n    })\r\n\r\n    return res.data\r\n  },\r\n  async updateProfile (profile: ProfileType) {\r\n    const res = await server.put<OperationResult>(`profile`, profile)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const authAPI = {\r\n  async me () {\r\n    const res = await server.get<MeResponse>(`auth/me`)\r\n    return res.data\r\n  },\r\n  async login (email: string, password: string, rememberMe = true, captcha: string) {\r\n    const res = await server.post<LoginResponse>(`auth/login`, { email, password, rememberMe, captcha })\r\n    return res.data\r\n  },\r\n  async logout () {\r\n    const res = await server.post<OperationResult>(`auth/logout`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const securityAPI = {\r\n  async getCaptcha () {\r\n    const res = await server.get<GetCaptchaResponse>(`security/get-captcha-url`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const dialogsAPI = {\r\n  // Сортировка человека вверх при начале чатинга\r\n  async startChatting (userID: number) {\r\n    const res = await server.put<OperationResult>(`dialogs/${userID}`)\r\n    return res.data\r\n  },\r\n  // Получить все диалоги (без сообщений просто для вывода)\r\n  async getAllDialogs () {\r\n    const res = await server.get<Array<GetAllDialogsResponse>>(`dialogs`)\r\n    return res.data\r\n  },\r\n  async getDialog (userID: number) {\r\n    const res = await server.get<GetDialogResponse>(`dialogs/${userID}/messages`)\r\n    return res.data\r\n  },\r\n  async sendMessage (userID: number, message: string) {\r\n    const res = await server.post<SendMessageResponse>(`dialogs/${userID}/messages`, { body: message })\r\n    return res.data\r\n  },\r\n  async isMessageViewed (messageID: string) {\r\n    const res = await server.get<boolean>(`dialogs/messages/${messageID}/viewed`)\r\n    return res.data\r\n  },\r\n  async putMessageInSpam (messageID: string) {\r\n    const res = await server.post<OperationResult>(`dialogs/messages/${messageID}/spam`)\r\n    return res.data\r\n  },\r\n  async deleteMessage (messageID: string) {\r\n    const res = await server.delete<OperationResult>(`dialogs/messages/${messageID}`)\r\n    return res.data\r\n  },\r\n  async restoreMessage (messageID: string) {\r\n    const res = await server.put<OperationResult>(`dialogs/messages/${messageID}/restore`)\r\n    return res.data\r\n  },\r\n  async messagesNewerThanDate (userID: number, date: string) {\r\n    const res = await server.get<Array<messagesNewerThanDateResponse>>(\r\n      `dialogs/${userID}/messages/new?newerThen=${date}`\r\n    )\r\n    return res.data\r\n  },\r\n  async getNewMessages () {\r\n    const res = await server.get<number>(`dialogs/messages/new/count`)\r\n    return res.data\r\n  },\r\n}\r\n\r\n// dialogsAPI.startChatting(5).then(r => {console.log(r)})\r\n// dialogsAPI.getAllDialogs().then(r => {console.log(r)})\r\n// dialogsAPI.getDialog(5).then(r => {console.log(r)})\r\n// dialogsAPI.sendMessage(5856, 'test').then(r => {console.log(r)})\r\n// dialogsAPI.isMessageViewed('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.putMessageInSpam('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.deleteMessage('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.restoreMessage('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.messagesNewerThanDate(5, '2020-03-11T17:11:10.403').then(r => {console.log(r)})\r\n// dialogsAPI.getNewMessages().then(r => {console.log(r)})\r\n","const SEND_MESSAGE = 'samurai-network/messages/SEND_MESSAGE'\r\n\r\ntype DialogType = {\r\n  id: number\r\n  username: string\r\n}\r\n\r\ntype MessageType = {\r\n  id: number\r\n  username: string\r\n  message: string\r\n}\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, username: 'Димыч' },\r\n    { id: 2, username: 'Саша' },\r\n    { id: 3, username: 'Валера' },\r\n    { id: 4, username: 'Иван' },\r\n    { id: 5, username: 'Света' },\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    { id: 1, username: 'Димыч', message: 'Я люблю react!' },\r\n    { id: 2, username: 'Димыч', message: 'Я люблю react!' },\r\n  ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nfunction messagesReducer (state = initialState, action: any): InitialStateType {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const nextId = state.messages[state.messages.length - 1].id + 1\r\n      const newMessage = {\r\n        id: nextId,\r\n        username: 'username',\r\n        message: action.formData.message,\r\n      }\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype sendMessageActionCreatorActionType = {\r\n  type: typeof SEND_MESSAGE\r\n  formData: string\r\n}\r\n\r\nexport const sendMessageActionCreator = (formData: string): sendMessageActionCreatorActionType => ({\r\n  type: SEND_MESSAGE,\r\n  formData: formData,\r\n})\r\n\r\nexport default messagesReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3hmYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Sidebar_aside__1e2NK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__2h5Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersList_users__WQVOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__JuxJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__OZeNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Qdic\",\"avatarBox\":\"User_avatarBox__dLefj\",\"info\":\"User_info__3dI-o\",\"userName\":\"User_userName__1AQPc\",\"followButton\":\"User_followButton__y-S0x\",\"sendMessage\":\"User_sendMessage__39BmE\",\"userStatus\":\"User_userStatus__1tTcC\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      }\n      else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            }\n            else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Main is cached for offline use.\" message.\n              console.log('Main is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      }\n      else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport styles from './Footer.module.css'\n\nfunction Footer () {\n  return (\n    <footer className={styles.footer}>\n      samurai-network\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './Menu.module.css'\n\nfunction Menu () {\n  return (\n    <ul className={styles.menu}>\n      <li className={styles.menuItem}>\n        <NavLink\n          exact to='/profile' className={styles.menuLink}\n          activeClassName={styles.active}\n        >Профиль\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/messages' className={styles.menuLink}\n          activeClassName={styles.active}\n        >Сообщения\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/users' className={styles.menuLink}\n          activeClassName={styles.active}\n        >Пользователи\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/news' className={styles.menuLink}\n          activeClassName={styles.active}\n        >Новости\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/music' className={styles.menuLink}\n          activeClassName={styles.active}\n        >Музыка\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/settings' className={styles.menuLink}\n          activeClassName={styles.active}\n        >Настройки\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styles from './Sidebar.module.css'\nimport Menu from './Menu/Menu'\n\nfunction Sidebar () {\n  return (\n    <aside className={styles.aside}>\n      <Menu/>\n    </aside>\n  )\n}\n\nexport default Sidebar\n","import { usersAPI } from '../api/api'\r\nimport { UserType } from '../types/AppTypes'\r\nimport { AppStateType } from './store'\r\nimport { Dispatch } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\n/* Action types */\r\nconst FOLLOW = 'samurai-network/users/FOLLOW'\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW'\r\nconst SET_USERS = 'samurai-network/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\nconst SET_TERM = 'samurai-network/users/SET_TERM'\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>, // array of users ids\r\n  term: '',\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionTypes =\r\n  AcceptFollowActionType |\r\n  AcceptUnfollowActionType |\r\n  SetUsersActionType |\r\n  SetCurrentPageActionType |\r\n  SetTotalUsersActionType |\r\n  SetIsFetchingActionType |\r\n  ToggleFollowingProgressActionType |\r\n  setTermActionType\r\n\r\nfunction usersReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.id) {\r\n            return { ...user, followed: true }\r\n          }\r\n          return user\r\n        }),\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.id) {\r\n            return { ...user, followed: false }\r\n          }\r\n          return user\r\n        }),\r\n      }\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      }\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      }\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsers,\r\n      }\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching ?\r\n          [...state.followingInProgress, action.userId] :\r\n          state.followingInProgress.filter(id => id !== action.userId),\r\n      }\r\n\r\n    case SET_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype AcceptFollowActionType = {\r\n  type: typeof FOLLOW,\r\n  id: number\r\n};\r\nexport const acceptFollow = (id: number): AcceptFollowActionType => ({ type: FOLLOW, id })\r\n\r\ntype AcceptUnfollowActionType = {\r\n  type: typeof UNFOLLOW,\r\n  id: number\r\n};\r\nexport const acceptUnfollow = (id: number): AcceptUnfollowActionType => ({ type: UNFOLLOW, id })\r\n\r\ntype SetUsersActionType = {\r\n  type: typeof SET_USERS,\r\n  users: Array<UserType>\r\n};\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({ type: SET_USERS, users })\r\n\r\ntype SetCurrentPageActionType = {\r\n  type: typeof SET_CURRENT_PAGE,\r\n  currentPage: number\r\n};\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n})\r\n\r\ntype SetTotalUsersActionType = {\r\n  type: typeof SET_TOTAL_USERS_COUNT,\r\n  totalUsers: number\r\n};\r\nexport const setTotalUsers = (totalUsers: number): SetTotalUsersActionType => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsers,\r\n})\r\n\r\ntype SetIsFetchingActionType = {\r\n  type: typeof TOGGLE_IS_FETCHING,\r\n  isFetching: boolean\r\n};\r\nexport const setIsFetching = (isFetching: boolean): SetIsFetchingActionType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n})\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n  type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching: boolean\r\n  userId: number\r\n};\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n})\r\n\r\ntype setTermActionType = {\r\n  type: typeof SET_TERM\r\n  term: string\r\n}\r\nexport const setTerm = (term: string): setTermActionType => ({\r\n  type: SET_TERM,\r\n  term,\r\n})\r\n\r\n/* Thunk creators */\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getRequestUsers = (pageSize: number, currentPage: number, term = ''): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setIsFetching(true))\r\n    const response = await usersAPI.getUsers(pageSize, currentPage, term)\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsers(response.totalCount))\r\n    dispatch(setIsFetching(false))\r\n  }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n  return async (dispatch: DispatchType, getState: GetStateType) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    _followUnfollowFlow(dispatch, userId, apiMethod, acceptFollow)\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n  return async (dispatch: DispatchType, getState: GetStateType) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    _followUnfollowFlow(dispatch, userId, apiMethod, acceptUnfollow)\r\n  }\r\n}\r\n\r\nconst _followUnfollowFlow = async (\r\n  dispatch: DispatchType,\r\n  userId: number,\r\n  apiMethod: any,\r\n  actionCreator: (userID: number) => AcceptFollowActionType | AcceptUnfollowActionType\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n  const response = await apiMethod(userId)\r\n  if (response.resultCode === 0) dispatch(actionCreator(userId))\r\n  dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport default usersReducer\r\n","import { createSelector } from 'reselect'\r\nimport { AppStateType } from './store'\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector__BadRender = (state: AppStateType) => {\r\n  return getUsers(state).filter(() => true)\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(() => true)\r\n  },\r\n)\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n","import React, { useState, ChangeEvent } from 'react'\r\nimport styles from './Search.module.css'\r\n\r\ntype PropTypes = {\r\n  setTerm: (term: string) => void\r\n  setCurrentPage: (page: number) => void\r\n  setPortionNumber: (number: number) => void\r\n}\r\n\r\nconst Search = React.memo<PropTypes>(\r\n  ({ setTerm, setCurrentPage, setPortionNumber }) => {\r\n    const [inputText, setInputText] = useState('')\r\n\r\n    const onTextChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setInputText(event.target.value)\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n      setCurrentPage(1)\r\n      setTerm(inputText)\r\n      setPortionNumber(1)\r\n    }\r\n\r\n    const onReset = () => {\r\n      setCurrentPage(1)\r\n      setTerm('')\r\n      setInputText('')\r\n      setPortionNumber(1)\r\n    }\r\n\r\n    const searchButtonStyle = {\r\n      cursor: (inputText) ? 'pointer' : 'not-allowed'\r\n    }\r\n\r\n    return (\r\n      <div className={styles.div}>\r\n        <input placeholder=\"Поиск\" type=\"text\" onChange={onTextChange} className={styles.input} value={inputText}/>\r\n        <button\r\n          disabled={!inputText}\r\n          style={searchButtonStyle}\r\n          onClick={onButtonClick}\r\n          className={styles.button}>\r\n          Найти\r\n        </button>\r\n        <button onClick={onReset} className={styles.reset}>Сброс</button>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport styles from './PaginationItem.module.css'\r\n\r\ntype PropTypes = {\r\n  active: boolean\r\n  number: number\r\n}\r\n\r\nconst PaginationItem: React.FC<PropTypes> = ({ active, number }) => {\r\n  const activeStyle = active ? styles.paginationItemActive : ''\r\n\r\n  return (\r\n    <li className={styles.paginationItem + ' ' + activeStyle} data-number={number}>{number}</li>\r\n  )\r\n}\r\n\r\nexport default PaginationItem\r\n","import React, { useEffect } from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport PaginationItem from './PaginationItem/PaginationItem'\r\n\r\ntype PropTypes = {\r\n  currentPage: number\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  portionSize: number\r\n  getRequestUsers: (pageSize: number, currentPage: number, term: string) => void\r\n  term: string\r\n  setCurrentPage: (page: number) => void\r\n  portionNumber: number\r\n  setPortionNumber: (number: number) => void\r\n}\r\n\r\nconst Paginator = React.memo<PropTypes>(\r\n  ({ setCurrentPage, currentPage, totalUsersCount, pageSize, portionSize, getRequestUsers, term, portionNumber, setPortionNumber }) => {\r\n\r\n    useEffect(() => {\r\n      getRequestUsers(pageSize, currentPage, term)\r\n    }, [getRequestUsers, pageSize, currentPage, term])\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n      getRequestUsers(pageSize, currentPage, term)\r\n      setCurrentPage(currentPage)\r\n    }\r\n\r\n    const pageCount = Math.ceil(totalUsersCount / pageSize)\r\n    const pages = []\r\n\r\n    for (let i = 1; i < totalUsersCount; i++) {\r\n      pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const lastElemPageNumber = pageCount / portionSize * portionSize\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const changePage = (event: any) => {\r\n      const pageNumber = +event.target.dataset.number\r\n\r\n      if (pageNumber) {\r\n        onPageChanged(pageNumber)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div onClick={changePage} className={styles.paginationItems}>\r\n        {\r\n          totalUsersCount > 0 &&\r\n          <button disabled={portionNumber === 1} className={styles.button}\r\n                  onClick={() => {setPortionNumber(portionNumber - 1)}}>Влево</button>\r\n        }\r\n        {\r\n          pages.filter(\r\n            (num) => (num >= leftPortionPageNumber && num <= rightPortionPageNumber && num <= lastElemPageNumber))\r\n            .map((num) => (\r\n              <PaginationItem key={num} number={num} active={+currentPage === num}/>\r\n            ))\r\n        }\r\n        {\r\n          totalUsersCount > 0 &&\r\n          <button disabled={portionCount === portionNumber} className={styles.button}\r\n                  onClick={() => {setPortionNumber(portionNumber + 1)}}>Вправо</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Paginator\r\n","import React from 'react'\r\nimport styles from './User.module.css'\r\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../../../../types/AppTypes'\r\n\r\ntype PropTypes = {\r\n  user: UserType\r\n  followButtonDisabled: boolean\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n}\r\n\r\nfunction User ({ user, followButtonDisabled, unfollow, follow }: PropTypes) {\r\n  return (\r\n    <li className={styles.user}>\r\n      <div className={styles.avatarBox}>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <img src={user.photos.small || defaultAvatar} alt='avatar'/>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={styles.info}>\r\n        <NavLink className={styles.userName} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n        {user.status && <span className={styles.userStatus}>{user.status}</span>}\r\n\r\n        {\r\n          user.followed ? (\r\n            <button\r\n              className={styles.followButton}\r\n              disabled={followButtonDisabled}\r\n              onClick={() => {unfollow(user.id)}}\r\n            >\r\n              Отписаться <span aria-label=\"Отписаться\" role=\"img\">❌</span>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className={styles.followButton}\r\n              disabled={followButtonDisabled}\r\n              onClick={() => {follow(user.id)}}\r\n            >\r\n              Подписаться <span aria-label=\"Подписаться\" role=\"img\">✅</span>\r\n            </button>\r\n          )\r\n        }\r\n\r\n        <NavLink to={`/messages/${user.id}`} className={styles.sendMessage}>Написать сообщение</NavLink>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport styles from './UsersList.module.css'\r\nimport User from './User/User'\r\nimport { UserType } from '../../../../types/AppTypes'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\n\r\ntype PropTypes = {\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  isFetching: boolean\r\n}\r\n\r\nconst UsersList = React.memo<PropTypes>(\r\n  ({ users, followingInProgress, follow, unfollow, isFetching }) => {\r\n\r\n    const usersOrMessage = (users.length) ?\r\n      users.map((user) => (\r\n        <User key={user.id}\r\n              user={user}\r\n              followButtonDisabled={followingInProgress.some(id => id === user.id)}\r\n              follow={follow}\r\n              unfollow={unfollow}\r\n        />\r\n      )) : 'Ничего не найдено'\r\n\r\n    return (\r\n      isFetching ? <Preloader/> :\r\n        <ul className={styles.users}>\r\n          {usersOrMessage}\r\n        </ul>\r\n    )\r\n\r\n  }\r\n)\r\n\r\nexport default UsersList\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  getRequestUsers,\r\n  setCurrentPage,\r\n  setIsFetching,\r\n  follow,\r\n  unfollow,\r\n  setTerm,\r\n} from '../../../redux/users-reducer'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getTotalUsersCount,\r\n  getUsersSelector,\r\n} from '../../../redux/users-selectors'\r\nimport { AppStateType } from '../../../redux/store'\r\nimport { UserType } from '../../../types/AppTypes'\r\nimport { compose } from 'redux'\r\nimport Search from './Search/Search'\r\nimport Paginator from './Paginator/Paginator'\r\nimport UsersList from './UsersList/UsersList'\r\n\r\ntype MapStatePropTypes = {\r\n  currentPage: number\r\n  users: Array<UserType>\r\n  totalUsersCount: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number>\r\n  term: string\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  setCurrentPage: (page: number) => void\r\n  setIsFetching: (isFetching: boolean) => void\r\n  getRequestUsers: (pageSize: number, currentPage: number, term: string) => void\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  setTerm: (term: string) => void\r\n}\r\n\r\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\r\n\r\nconst Users: React.FC<PropTypes> = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  isFetching,\r\n  users,\r\n  followingInProgress,\r\n  setCurrentPage,\r\n  follow,\r\n  unfollow,\r\n  setTerm,\r\n  getRequestUsers,\r\n  term,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setCurrentPage(1)\r\n    }\r\n  }, [setCurrentPage])\r\n\r\n  const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n  return (\r\n    <>\r\n      <h1>Пользователи</h1>\r\n      <Search\r\n        setTerm={setTerm}\r\n        setCurrentPage={setCurrentPage}\r\n        setPortionNumber={setPortionNumber}\r\n      />\r\n      <Paginator\r\n        totalUsersCount={totalUsersCount}\r\n        currentPage={currentPage}\r\n        pageSize={6}\r\n        portionSize={10}\r\n        getRequestUsers={getRequestUsers}\r\n        term={term}\r\n        setCurrentPage={setCurrentPage}\r\n        portionNumber={portionNumber}\r\n        setPortionNumber={setPortionNumber}\r\n      />\r\n      <UsersList\r\n        users={users}\r\n        followingInProgress={followingInProgress}\r\n        follow={follow}\r\n        unfollow={unfollow}\r\n        isFetching={isFetching}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    term: state.usersPage.term,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropTypes, MapDispatchPropTypes, unknown, AppStateType>(mapStateToProps, {\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    getRequestUsers,\r\n    follow,\r\n    unfollow,\r\n    setTerm,\r\n  }),\r\n)(Users)\r\n","import React from 'react'\nimport styles from './News.module.css'\n\nfunction News () {\n  return (\n    <div className={styles.messages}>\n      Новости\n    </div>\n  )\n}\n\nexport default News\n","import React from 'react'\nimport styles from './Music.module.css'\n\nfunction Music () {\n  return (\n    <div className={styles.messages}>\n      Музыка\n    </div>\n  )\n}\n\nexport default Music\n","import React from 'react'\nimport styles from './Settings.module.css'\n\nfunction Settings () {\n  return (\n    <div className={styles.messages}>\n      Настройки\n    </div>\n  )\n}\n\nexport default Settings\n","import { getAuthUserData, setMyProfile } from './auth-reducer'\r\nimport { profileAPI } from '../api/api'\r\n\r\n/* Action types */\r\nconst INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED_SUCCESS'\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  initialized: false,\r\n}\r\n\r\nfunction initReducer (state = initialState, action: any): InitialStateType {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype InitializedSuccessType = {\r\n  type: typeof INITIALIZED_SUCCESS\r\n};\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({ type: INITIALIZED_SUCCESS })\r\n\r\n/* Thunk creators */\r\nexport const initializeApp = () => (dispatch: any) => {\r\n  dispatch(getAuthUserData())\r\n    .then(() => {\r\n      dispatch(getMyProfile()).then(() => {\r\n        dispatch(initializedSuccess())\r\n      })\r\n    })\r\n}\r\n\r\nexport const getMyProfile = () => async (dispatch: any, getState: any) => {\r\n  if (getState().auth.isAuth) {\r\n    const response = await profileAPI.getProfile(getState().auth.userId)\r\n    dispatch(setMyProfile(response))\r\n  }\r\n}\r\n\r\nexport default initReducer\r\n","import { authAPI, securityAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { ProfileType } from '../types/AppTypes'\r\nimport { getMyProfile } from './init-reducer'\r\n\r\n/* Action types */\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS'\r\nconst SET_MY_PROFILE = 'samurai-network/auth/SET_MY_PROFILE'\r\n\r\nconst initialState = {\r\n  userId: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isFetching: false as boolean,\r\n  isAuth: false as boolean,\r\n  captchaUrl: null as string | null,\r\n  myProfile: null as ProfileType | null,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nfunction authReducer (state = initialState, action: any): InitialStateType {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.captchaUrl,\r\n      }\r\n\r\n    case SET_MY_PROFILE:\r\n      return {\r\n        ...state,\r\n        myProfile: action.profile,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype SetAuthUserDataActionPayloadType = {\r\n  userId: number | null\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n};\r\n\r\ntype SetAuthUserDataActionType = {\r\n  type: typeof SET_USER_DATA\r\n  payload: SetAuthUserDataActionPayloadType\r\n};\r\n\r\nexport const setAuthUserData = (\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean,\r\n): SetAuthUserDataActionType => (\r\n  { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\r\n)\r\n\r\ntype GetCaptchaUrlSuccessType = {\r\n  type: typeof GET_CAPTCHA_URL_SUCCESS\r\n  captchaUrl: string\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessType => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS,\r\n  captchaUrl: captchaUrl,\r\n})\r\n\r\ntype SetMyProfileType = {\r\n  type: typeof SET_MY_PROFILE\r\n  profile: ProfileType\r\n}\r\n\r\nexport const setMyProfile = (profile: ProfileType): SetMyProfileType => ({\r\n  type: SET_MY_PROFILE,\r\n  profile,\r\n})\r\n\r\n/* Thunk creators */\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n  const meData = await authAPI.me()\r\n\r\n  if (meData.resultCode === 0) {\r\n    let { id, email, login } = meData.data\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const login = (\r\n  email: string,\r\n  password: string,\r\n  rememberMe: boolean,\r\n  captcha: string,\r\n) => async (dispatch: any) => {\r\n  const data = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n  if (data.resultCode === 0) {\r\n    dispatch(getAuthUserData()).then(() => {\r\n      dispatch(getMyProfile())\r\n    })\r\n  }\r\n  else {\r\n    // 10 - Captcha is required\r\n    if (data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl())\r\n    }\r\n\r\n    dispatch(stopSubmit(\r\n      'login',\r\n      { _error: data.messages[0] },\r\n    ))\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n  const response = await authAPI.logout()\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n  const response = await securityAPI.getCaptcha()\r\n  const captchaUrl = response.url\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { createField } from '../../common/FormsControls/createField'\r\nimport { required } from '../../../utils/validators'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Input = createField('input')\r\n\r\n// type PropTypes = {\r\n//   isAuth: boolean\r\n//   captchaUrl: string\r\n//   login: (login: string, password: string, rememberMe: boolean, captcha: string) => void\r\n// }\r\n\r\nfunction Login (props) {\r\n  const onSubmit = async (formData) => {\r\n    const { login, password, rememberMe, captcha } = formData\r\n    props.login(login, password, rememberMe, captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to='/profile'/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction LoginForm ({ handleSubmit, error, captchaUrl }) {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type='text' placeholder='Логин' name='login' component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type='password' placeholder='Пароль' name='password'\r\n          component={Input} validate={[required]}\r\n        />\r\n      </div>\r\n      <Field\r\n        type='checkbox' name='rememberMe' id='rememberMe'\r\n        component={Input} checked\r\n      />\r\n      <label htmlFor='rememberMe'>Запомнить меня</label>\r\n\r\n      {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n      {captchaUrl &&\r\n      <Field\r\n        type='text' placeholder='Капча' name='captcha' component={Input}\r\n        validate={[required]}\r\n      />}\r\n\r\n      {error ? <div style={{ color: 'red' }}>{error}</div> : null}\r\n      <div>\r\n        <button>Войти</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default connect((state) => ({\r\n  isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl\r\n}), { login })(Login)\r\n","import Preloader from '../components/common/Preloader/Preloader'\r\nimport React from 'react'\r\n\r\nexport function withSuspense (Component: React.ComponentType) {\r\n  return (props: any) => (\r\n    <React.Suspense fallback={<Preloader/>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport styles from './Main.module.css'\r\nimport Users from './Users/Users'\r\nimport News from './News/News'\r\nimport Music from './Music/Music'\r\nimport Settings from './Settings/Settings'\r\nimport Login from './Login/Login'\r\nimport { withSuspense } from '../../hoc/withSuspense'\r\n\r\nconst MessagesContainer = React.lazy(\r\n  () => import('./Messages/MessagesContainer')\r\n)\r\nconst ProfileContainer = React.lazy(\r\n  () => import('./Profile/ProfileContainer')\r\n)\r\n\r\nfunction Main () {\r\n  return (\r\n    <div className={styles.content}>\r\n      <Switch>\r\n        <Route exact path='/' render={() => <Redirect to='/profile'/>}/>\r\n        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n        <Route path='/messages' render={withSuspense(MessagesContainer)}/>\r\n        <Route path='/users' render={() => <Users/>}/>\r\n        <Route path='/news' component={News}/>\r\n        <Route path='/music' component={Music}/>\r\n        <Route path='/settings' component={Settings}/>\r\n        <Route path='/login' render={() => <Login/>}/>\r\n        <Route path='*' render={() => '404'}/>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\nimport styles from './Button.module.css'\n\ntype PropTypes = {\n  width?: number\n  onClick?: () => any\n}\n\nconst Button: React.FC<PropTypes> = ({ width, children, onClick }) => {\n  return (\n    <button onClick={onClick} style={{ width }} className={styles.button}>{children}</button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { logout } from '../../redux/auth-reducer'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../../redux/store'\nimport styles from './Header.module.css'\nimport Button from '../common/Button/Button'\nimport { NavLink } from 'react-router-dom'\nimport { ProfileType } from '../../types/AppTypes'\n\ntype MapStatePropTypes = {\n  isAuth: boolean\n  myProfile: ProfileType | null\n}\n\ntype MapDispatchPropTypes = {\n  logout: () => void\n}\n\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\n\nconst Header: React.FC<PropTypes> = ({ isAuth, logout, myProfile }) => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.container}>\n        <div>Samurai-Network</div>\n        {\n          isAuth && myProfile && myProfile.photos.small ? (\n              <div className={styles.infoMe}>\n                <span className={styles.userName}>\n                  {myProfile.fullName.split(' ')[0]}\n                </span>\n                <img className={styles.avatar} src={myProfile.photos.small} alt=\"avatar\"/>\n                <Button onClick={logout}>Выйти</Button>\n              </div>\n            )\n            : <NavLink to='/login' className={styles.login}>Login</NavLink>\n        }\n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropTypes => ({\n  isAuth: state.auth.isAuth,\n  myProfile: state.auth.myProfile\n})\n\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, Object, AppStateType>(mapStateToProps, {\n  logout,\n})(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport styles from './App.module.css'\nimport Footer from './Footer/Footer'\nimport Sidebar from './Sidebar/Sidebar'\nimport Main from './Main/Main'\nimport Header from './Header/Header'\nimport { initializeApp } from '../redux/init-reducer'\nimport { AppStateType } from '../redux/store'\nimport { HashRouter } from 'react-router-dom'\nimport Preloader from './common/Preloader/Preloader'\n\ntype MapStatePropTypes = {\n  initialized: boolean\n}\n\ntype MapDispatchPropTypes = {\n  initializeApp: () => void\n}\n\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\n\nconst App: React.FC<PropTypes> = ({ initializeApp, initialized }) => {\n  useEffect(() => {\n    initializeApp()\n  }, [initializeApp])\n\n  if (!initialized) {\n    return <Preloader fullscreen/>\n  }\n\n  return (\n    <React.StrictMode>\n      <HashRouter>\n        <div className={styles.page}>\n          <Header/>\n          <main className={styles.main}>\n            <Sidebar/>\n            <Main/>\n          </main>\n          <Footer/>\n        </div>\n      </HashRouter>\n    </React.StrictMode>\n  )\n}\n\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\n  return {\n    initialized: state.init.initialized\n  }\n}\n\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, Object, AppStateType>(\n  mapStateToProps, { initializeApp }\n)(App)\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport messagesReducer from './messages-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport initReducer from './init-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  init: initReducer,\r\n  form: formReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nexport default store\r\n","import * as serviceWorker from './serviceWorker'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2CR8J\",\"container\":\"Header_container__HDvgl\",\"userName\":\"Header_userName__3dpGW\",\"avatar\":\"Header_avatar__34Ghc\",\"infoMe\":\"Header_infoMe__UMQTd\"};","import React from 'react'\nimport styles from './Preloader.module.css'\nimport preloader from '../../../assets/images/preloader.gif'\n\ntype PropTypes = {\n  fullscreen?: boolean\n}\n\nconst Preloader: React.FC<PropTypes> = ({ fullscreen = false }) => {\n  return (fullscreen) ? (\n    <div className={styles.wrapper}>\n      <div className={styles.preloader}>\n        <img className={styles.preloaderIMG} src={preloader} alt='load'/>\n      </div>\n    </div>\n  ) : (\n    <img className={styles.preloaderIMG} src={preloader} alt='load'/>\n  )\n}\n\nexport default Preloader\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Search_div__2HjV8\",\"input\":\"Search_input__1SF7g\",\"button\":\"Search_button__tmFR-\",\"reset\":\"Search_reset__2G7ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderIMG\":\"Preloader_preloaderIMG__BZHNf\",\"wrapper\":\"Preloader_wrapper__1pJ8g\",\"preloader\":\"Preloader_preloader__oGcz1\"};","export const required = (value: string) => {\r\n  if (!value) return 'Поле обязательное'\r\n}\r\n\r\nexport const maxLengthCreator = (length: number) => (value: string) => {\r\n  if (value.length > length) return `Максимальная длина - ${length}`\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItems\":\"Paginator_paginationItems__2iECZ\",\"button\":\"Paginator_button__1_Jp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__4Klr-\",\"main\":\"App_main__1nCkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItem\":\"PaginationItem_paginationItem__1EdWb\",\"paginationItemActive\":\"PaginationItem_paginationItemActive__1EfE6\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.584b607f.gif\";","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport function createField (FormElement: string) {\r\n  return function ({ meta, input, ...props }: any) {\r\n    const isError = meta.error && meta.touched\r\n\r\n    return (\r\n      <span className={(isError || null) && styles.error}>\r\n        <FormElement {...input} {...props} />\r\n        {isError && <span>{meta.error}</span>}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n","import { profileAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { PhotosType, PostType, ProfileType } from '../types/AppTypes'\r\n\r\n/* Action types */\r\nconst ADD_POST = 'samurai-network/profile/ADD_POST'\r\nconst SET_USER_PROFILE = 'samurai-network/profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'samurai-network/profile/SET_STATUS'\r\nconst DELETE_POST = 'samurai-network/profile/DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'samurai-network/profile/SAVE_PHOTO_SUCCESS'\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, text: 'Вам нравится React?', likes: 4 },\r\n    { id: 2, text: 'hey', likes: 2 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nfunction profileReducer (state = initialState, action: any): InitialStateType {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const nextId = state.posts[state.posts.length - 1].id + 1\r\n      const newPost = {\r\n        id: nextId,\r\n        text: action.post,\r\n        likes: 0,\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      }\r\n\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      }\r\n\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      }\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.postId),\r\n      }\r\n\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype AddPostActionCreatorActionType = {\r\n  type: typeof ADD_POST\r\n  post: string\r\n};\r\nexport const addPostActionCreator = (formData: any): AddPostActionCreatorActionType => (\r\n  { type: ADD_POST, post: formData.newPost }\r\n)\r\n\r\ntype SetUserProfileActionType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: ProfileType\r\n};\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => (\r\n  { type: SET_USER_PROFILE, profile: profile }\r\n)\r\n\r\ntype SetStatusActionType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n};\r\nexport const setStatus = (status: string): SetStatusActionType => (\r\n  { type: SET_STATUS, status: status }\r\n)\r\n\r\ntype DeletePostActionType = {\r\n  type: typeof DELETE_POST\r\n  postId: number\r\n};\r\nexport const deletePost = (postId: number): DeletePostActionType => (\r\n  { type: DELETE_POST, postId: postId }\r\n)\r\n\r\ntype SavePhotoSuccessActionType = {\r\n  type: typeof SAVE_PHOTO_SUCCESS\r\n  photos: PhotosType\r\n};\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => (\r\n  { type: SAVE_PHOTO_SUCCESS, photos: photos }\r\n)\r\n\r\n/* Thunk creators */\r\nexport const getUsersProfile = (userId: number) => async (dispatch: any) => {\r\n  const response = await profileAPI.getProfile(userId)\r\n  dispatch(setUserProfile(response))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n  const response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n  const response = await profileAPI.updateStatus(status)\r\n  if (response.resultCode === 0) {\r\n    dispatch(setStatus(status))\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n  const response = await profileAPI.updatePhoto(file)\r\n  if (response.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.photos))\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n  const response = await profileAPI.updateProfile(profile)\r\n  if (response.resultCode === 0) {\r\n    dispatch(getUsersProfile(getState().auth.userId))\r\n  }\r\n  else {\r\n    dispatch(stopSubmit(\r\n      'edit-profile', { _error: 'response.data.messages[0]' },\r\n    ))\r\n    return Promise.reject()\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n"],"sourceRoot":""}