{"version":3,"sources":["components/Content/Profile/Profile.module.css","components/Content/Profile/User/User.module.css","components/Content/Profile/Posts/Posts.module.css","components/Content/Profile/Posts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Content/Profile/User/Status/StatusHooks.jsx","components/Content/Profile/User/ProfileDataForm.jsx","components/Content/Profile/User/User.jsx","components/Content/Profile/Posts/Post/Post.jsx","components/Content/Profile/Posts/Posts.jsx","components/Content/Profile/Posts/PostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Status","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","onClick","autoFocus","onChange","event","currentTarget","onBlur","updateStatus","onFocus","select","type","Input","createField","Textarea","reduxForm","form","onSubmit","handleSubmit","error","Field","placeholder","name","component","validate","required","keys","profile","contacts","map","key","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","about","lookingForAJob","lookingForAJobDescription","aboutMe","contLI","User","savePhoto","saveProfile","user","avatar","src","photos","large","defaultAvatar","alt","info","fullName","initialValues","formData","then","e","target","files","style","Preloader","Post","post","message","text","likes","maxLength","maxLengthCreator","AddNewPostFormRedux","textarea","button","Posts","postsElements","state","profilePage","posts","id","reverse","title","addPost","postsList","PostsContainer","connect","dispatch","addPostActionCreator","Profile","ProfileContainer","userURLId","this","match","params","userId","history","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.80ed17fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2BglU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__26rxK\",\"avatar\":\"User_avatar__2CBqR\",\"info\":\"User_info__24maK\",\"name\":\"User_name__3bQpI\",\"about\":\"User_about__3_B8Y\",\"contacts\":\"User_contacts__SeENQ\",\"contLI\":\"User_contLI__Pt66L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__3ouA4\",\"title\":\"Posts_title__1vXq0\",\"textarea\":\"Posts_textarea__1Xf1T\",\"button\":\"Posts_button__1fVur\",\"postsList\":\"Posts_postsList__2cN7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3GWhO\",\"avatar\":\"Post_avatar__2boOG\",\"message\":\"Post_message__1x5Ew\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from 'react';\nimport styles from './Status.module.css';\n\nfunction Status(props) {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n  };\n\n  const updateStatus = () => {\n    deactivateEditMode();\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (event) => {\n    setStatus(event.currentTarget.value);\n  };\n\n  const selectInputText = (event) => {\n    event.currentTarget.select();\n  };\n\n  return (\n      <div className={styles.status}>\n        {\n          !editMode &&\n          <div onClick={activateEditMode}>{props.status || 'null'}</div>\n        }\n\n        {\n          editMode &&\n          <div>\n            <input autoFocus onChange={onStatusChange} onBlur={updateStatus}\n                   onFocus={selectInputText} type=\"text\" value={status}/>\n          </div>\n        }\n      </div>\n  );\n}\n\nexport default Status;","import React from 'react';\r\nimport {createField} from '../../../common/FormsControls/createField';\r\nimport {required} from '../../../../utils/validators/validators';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nconst Input = createField('input');\r\nconst Textarea = createField('textarea');\r\n\r\nfunction ProfileDataForm(props) {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <button>Сохранить</button>\r\n        </div>\r\n\r\n        {props.error && <div>{props.error}</div>}\r\n\r\n        <div>\r\n          <div>\r\n            <label>\r\n              Имя:\r\n              <Field type='text' placeholder='Имя' name='fullName'\r\n                     component={Input} validate={[required]}/>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Ищу работу:\r\n              <Field type='checkbox' name='lookingForAJob' component={Input}/>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Мои навыки:\r\n              <Field name='lookingForAJobDescription' component={Textarea}\r\n                     validate={[required]}/>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Обо мне:\r\n              <Field name='aboutMe' component={Textarea} validate={[required]}/>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <b>Контакты</b>\r\n            {\r\n              Object.keys(props.profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                  <b>{key}</b>:\r\n                  <Field type='text' placeholder={key} name={'contacts.' + key}\r\n                         component={Input}/>\r\n                </div>;\r\n              })\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm);","import React, {useState} from 'react';\nimport styles from './User.module.css';\nimport Preloader from '../../../common/Preloader/Preloader';\nimport Status from './Status/StatusHooks';\nimport defaultAvatar from '../../../../assets/images/defaultAvatar.png';\nimport ProfileDataForm from './ProfileDataForm';\n\nfunction User({profile, savePhoto, status, updateStatus, isOwner, saveProfile}) {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader/>;\n  }\n\n  function onMainPhotoSelected(e) {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  function onSubmit(formData) {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  }\n\n  return (\n      <div className={styles.user}>\n        <img className={styles.avatar}\n             src={profile.photos.large || defaultAvatar} alt=\"avatar\"/>\n        <div className={styles.info}>\n          <h1 className={styles.name}>\n            {profile && profile.fullName}\n          </h1>\n          <Status status={status} updateStatus={updateStatus}/>\n          {editMode ?\n              <ProfileDataForm profile={profile} initialValues={profile}\n                               onSubmit={onSubmit}/> :\n              <ProfileData goToEditMode={() => {setEditMode(true);}}\n                           isOwner={isOwner} profile={profile}/>}\n          {isOwner && <input onChange={onMainPhotoSelected} type='file'\n                             style={{'color': 'white'}}/>}\n        </div>\n      </div>\n  );\n}\n\nfunction Contact({contactTitle, contactValue}) {\n  return <li>{contactTitle}: {contactValue}</li>;\n}\n\nfunction ProfileData({profile, isOwner, goToEditMode}) {\n  return (\n      <>\n        {isOwner && <button onClick={goToEditMode}>Редактировать</button>}\n        <ul className={styles.about}>\n          <li>Ищу работу: {profile.lookingForAJob ? 'да' : 'нет'}</li>\n          {profile.lookingForAJob && <li>Мои профессиональные\n            навыки: {profile.lookingForAJobDescription}</li>}\n          {profile.aboutMe && <li>Обо мне: {profile.aboutMe}</li>}\n          <li className={styles.contLI}>\n            Мои контакты:\n            <ul className={styles.contacts}>\n              {Object.keys(profile.contacts).map((key) =>\n                  <Contact key={key} contactTitle={key}\n                           contactValue={profile.contacts[key]}/>,\n              )}\n            </ul>\n          </li>\n        </ul>\n      </>\n  );\n}\n\nexport default User;","import React from 'react';\nimport styles from './Post.module.css';\n\nfunction Post(props) {\n\treturn (\n\t\t<div className={styles.post}>\n\t\t\t<div>\n\t\t\t\t<img className={styles.avatar} src=\"https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg\" alt=\"\"/>\n\t\t\t</div>\n\t\t\t<div className={styles.message}>\n\t\t\t\t<div>\n\t\t\t\t\t{props.text}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{props.likes}♥\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Post;","import React from 'react';\nimport styles from './Posts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {required, maxLengthCreator} from \"../../../../utils/validators/validators\";\nimport {createField} from \"../../../common/FormsControls/createField\";\n\nconst maxLength = maxLengthCreator(10);\nconst Textarea = createField('textarea');\n\nfunction Posts(props) {\n    const postsElements = props.state.profilePage.posts.map(\n        post => <Post key={post.id} text={post.text} likes={post.likes}/>\n    ).reverse();\n\n    return (\n        <div className={styles.posts}>\n            <h2 className={styles.title}>Посты</h2>\n            <AddNewPostFormRedux onSubmit={(formData) => {props.addPost(formData)}}/>\n            <div className={styles.postsList}>\n                {postsElements}\n            </div>\n        </div>\n    );\n}\n\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPost'})(AddNewPostForm);\n\nfunction AddNewPostForm(props) {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={styles.textarea} name='newPost' component={Textarea} placeholder='Что у вас нового?' validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button className={styles.button}>Отправить</button>\n            </div>\n        </form>\n    );\n}\n\nexport default Posts;","import {addPostActionCreator} from '../../../../redux/profile-reducer';\nimport Posts from './Posts';\nimport {connect} from 'react-redux';\n\nfunction mapStateToProps(state) {\n    return {\n        state: state\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addPost(formData) {\n            dispatch(addPostActionCreator(formData));\n        }\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer;","import React from 'react';\nimport styles from './Profile.module.css';\n// import Wallpaper from './Wallpaper/Wallpaper';\nimport User from './User/User';\nimport PostsContainer from './Posts/PostsContainer';\n\nfunction Profile(props) {\n  return (\n      <div className={styles.profile}>\n        {/*<Wallpaper/>*/}\n        <User savePhoto={props.savePhoto}\n              profile={props.profile}\n              status={props.status}\n              updateStatus={props.updateStatus}\n              isOwner={props.isOwner}\n              saveProfile={props.saveProfile}/>\n        <PostsContainer/>\n      </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {\r\n  getStatus,\r\n  getUsersProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userURLId = this.props.match.params.userId || this.props.userId ||\r\n        this.props.history.push('/login');\r\n    this.props.getUsersProfile(userURLId);\r\n    this.props.getStatus(userURLId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props} isOwner={!this.props.match.params.userId}/>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n  };\r\n}\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\nlet withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\nexport default connect(mapStateToProps, {getUsersProfile})(withUrlDataContainerComponent);*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}