{"version":3,"sources":["components/Sidebar/Menu/Menu.module.css","components/Footer/Footer.module.css","components/Sidebar/Sidebar.module.css","components/Main/Main.module.css","components/Main/Users/UsersList/UsersList.module.css","components/common/FormsControls/FormsControls.module.css","components/Main/Messages/Dialog/Dialog.module.css","components/Main/Profile/Profile.module.css","components/common/Button/Button.module.css","components/Main/Profile/User/User.module.css","components/Main/Users/UsersList/User/User.module.css","serviceWorker.ts","components/Footer/Footer.tsx","components/Sidebar/Menu/Menu.tsx","components/Sidebar/Sidebar.tsx","api/api.ts","redux/users-reducer.ts","redux/users-selectors.ts","components/Main/Users/Search/Search.tsx","components/Main/Users/Paginator/PaginationItem/PaginationItem.tsx","components/Main/Users/Paginator/Paginator.tsx","components/Main/Users/UsersList/User/User.tsx","components/common/Preloader/Preloader.tsx","components/Main/Users/UsersList/UsersList.tsx","components/Main/Users/Users.tsx","components/Main/News/News.tsx","components/Main/Music/Music.tsx","components/Main/Settings/Settings.tsx","components/common/FormsControls/createField.tsx","utils/validators.ts","redux/init-reducer.ts","redux/auth-reducer.ts","components/Main/Login/Login.jsx","redux/messages-reducer.ts","components/Main/Messages/Dialog/Dialog.jsx","components/Main/Messages/Message/Message.jsx","components/Main/Messages/Messages.jsx","hoc/withAuthRedirect.tsx","components/Main/Messages/MessagesContainer.jsx","redux/profile-reducer.ts","components/Main/Profile/User/Status/StatusHooks.tsx","components/Main/Profile/User/ProfileDataForm.jsx","components/Main/Profile/User/User.jsx","components/Main/Profile/Posts/Post/Post.jsx","components/Main/Profile/Posts/Posts.jsx","components/Main/Profile/Posts/PostsContainer.jsx","components/Main/Profile/Profile.tsx","components/Main/Main.tsx","components/common/Button/Button.tsx","components/Header/Header.tsx","components/App.tsx","redux/store.ts","index.tsx","components/Header/Header.module.css","components/Main/Profile/Posts/Posts.module.css","components/Main/Users/Search/Search.module.css","components/common/Preloader/Preloader.module.css","components/Main/Messages/Messages.module.css","assets/images/defaultAvatar.png","components/Main/Users/Paginator/Paginator.module.css","components/Main/Messages/Message/Message.module.css","components/Main/Profile/Posts/Post/Post.module.css","components/App.module.css","components/Main/Users/Paginator/PaginationItem/PaginationItem.module.css","assets/images/preloader.gif"],"names":["module","exports","Boolean","window","location","hostname","match","Footer","className","styles","footer","Menu","menu","menuItem","exact","to","menuLink","activeClassName","active","Sidebar","aside","server","axios","create","withCredentials","baseURL","headers","usersAPI","count","page","term","get","res","data","userID","post","delete","profileAPI","status","put","photoFile","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_TERM","initialState","users","totalUsersCount","currentPage","isFetching","followingInProgress","setUsers","type","setTotalUsers","totalUsers","setIsFetching","toggleFollowingProgress","userId","usersReducer","state","action","map","user","id","followed","filter","getUsers","usersPage","getUsersSelector","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Search","React","memo","setTerm","setCurrentPage","setPortionNumber","useState","inputText","setInputText","searchButtonStyle","cursor","div","placeholder","onChange","event","target","value","input","disabled","style","onClick","button","reset","PaginationItem","number","activeStyle","paginationItemActive","paginationItem","data-number","Paginator","pageSize","portionSize","getRequestUsers","portionNumber","useEffect","pageCount","Math","ceil","pages","i","push","portionCount","lastElemPageNumber","leftPortionPageNumber","rightPortionPageNumber","pageNumber","dataset","onPageChanged","paginationItems","num","key","User","followButtonDisabled","unfollow","follow","avatarBox","src","photos","small","defaultAvatar","alt","info","userName","name","userStatus","followButton","aria-label","role","sendMessage","Preloader","fullscreen","wrapper","preloader","preloaderIMG","UsersList","usersOrMessage","length","some","compose","connect","dispatch","a","async","response","items","totalCount","resultCode","News","messages","Music","Settings","createField","FormElement","meta","props","isError","error","touched","required","maxLengthCreator","INITIALIZED_SUCCESS","initialized","getMyProfile","getState","isAuth","auth","setMyProfile","initReducer","SET_USER_DATA","GET_CAPTCHA_URL","SET_MY_PROFILE","login","captchaUrl","myProfile","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","meData","getCaptchaUrl","url","authReducer","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","validate","checked","htmlFor","color","then","stopSubmit","_error","SEND_MESSAGE","dialogs","username","message","sendMessageActionCreator","messagesReducer","newMessage","Dialog","dialog","String","Message","chatItem","avatar","maxLength","Textarea","AddMessageFormRedux","Messages","dialogsElements","messagesElements","output","chat","buttonOnClick","mapStateToPropsForRedirect","messagesPage","Component","RedirectComponent","this","ADD_POST","SET_USER_PROFILE","SET_STATUS","SET_PROFILE_PHOTO","posts","text","likes","addPost","newPost","setStatus","getUsersProfile","profileReducer","Status","editMode","setEditMode","autoFocus","currentTarget","onBlur","updateStatus","onFocus","select","Object","keys","contacts","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","about","lookingForAJob","lookingForAJobDescription","aboutMe","contLI","savePhoto","saveProfile","avatarWrapper","avatarIMG","large","e","files","fullName","initialValues","Post","AddNewPostFormRedux","textarea","Posts","postsElements","profilePage","reverse","title","postsList","PostsContainer","getStatus","file","Promise","reject","withRouter","history","userURL","params","Main","content","path","render","MessagesContainer","Button","width","children","logout","header","container","infoMe","split","init","initializeApp","main","rootReducer","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d6416a66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__27qdF\",\"menuLink\":\"Menu_menuLink__EHAtu\",\"active\":\"Menu_active__2D1vX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3hmYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Sidebar_aside__1e2NK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__2h5Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersList_users__WQVOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__JuxJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__PhsES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1gLmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__OZeNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3IO7s\",\"avatar\":\"User_avatar__PIYbG\",\"avatarWrapper\":\"User_avatarWrapper__12L1B\",\"avatarIMG\":\"User_avatarIMG__X7TVA\",\"info\":\"User_info__3RGS0\",\"name\":\"User_name__2C3bT\",\"about\":\"User_about__OICPx\",\"contacts\":\"User_contacts__3FDjf\",\"contLI\":\"User_contLI__3tgPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Qdic\",\"avatarBox\":\"User_avatarBox__dLefj\",\"info\":\"User_info__3dI-o\",\"userName\":\"User_userName__1AQPc\",\"followButton\":\"User_followButton__y-S0x\",\"sendMessage\":\"User_sendMessage__39BmE\",\"userStatus\":\"User_userStatus__1tTcC\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      }\n      else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            }\n            else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Main is cached for offline use.\" message.\n              console.log('Main is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      }\n      else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport styles from './Footer.module.css'\n\nfunction Footer () {\n  return (\n    <footer className={styles.footer}>\n      samurai-network\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './Menu.module.css'\n\nfunction Menu () {\n  return (\n    <ul className={styles.menu}>\n      <li className={styles.menuItem}>\n        <NavLink\n          exact to='/profile' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Моя страница\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/messages' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Сообщения\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/users' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Пользователи\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/news' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Новости\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/music' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Музыка\n        </NavLink>\n      </li>\n      <li className={styles.menuItem}>\n        <NavLink\n          to='/settings' className={styles.menuLink}\n          activeClassName={styles.active}\n        >\n          Настройки\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styles from './Sidebar.module.css'\nimport Menu from './Menu/Menu'\n\nfunction Sidebar () {\n  return (\n    <aside className={styles.aside}>\n      <Menu/>\n    </aside>\n  )\n}\n\nexport default Sidebar\n","import axios from 'axios'\r\nimport {\r\n  GetUsersResponse,\r\n  OperationResult,\r\n  SavePhotoResponse,\r\n  MeResponse,\r\n  LoginResponse,\r\n  GetCaptchaResponse,\r\n  GetAllDialogsResponse,\r\n  GetDialogResponse, SendMessageResponse, messagesNewerThanDateResponse\r\n} from '../types/APITypes'\r\nimport { ProfileType } from '../types/AppTypes'\r\n\r\nconst server = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    // ca3b0eb4-4af6-4803-8caa-f7d26464a12c main\r\n    // a7da6dad-5c4f-417c-a0d9-8d30ee0d96ec secondary\r\n    'API-KEY': 'ca3b0eb4-4af6-4803-8caa-f7d26464a12c',\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  async getUsers (count: number, page: number, term = '') {\r\n    const res = await server.get<GetUsersResponse>(`users?count=${count}&page=${page}&term=${term}`)\r\n    return res.data\r\n  },\r\n  async isFollowing (userID: number) {\r\n    const res = await server.get<boolean>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n  async follow (userID: number) {\r\n    const res = await server.post<OperationResult>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n  async unfollow (userID: number) {\r\n    const res = await server.delete<OperationResult>(`follow/${userID}`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  async getProfile (userID: number) {\r\n    const res = await server.get<ProfileType>(`profile/${userID}`)\r\n    return res.data\r\n  },\r\n  async getStatus (userID: number) {\r\n    const res = await server.get<string>(`profile/status/${userID}`)\r\n    return res.data\r\n  },\r\n  async updateStatus (status: string) {\r\n    const res = await server.put<OperationResult>(`profile/status`, { status: status })\r\n    return res.data\r\n  },\r\n  async updatePhoto (photoFile: File) {\r\n    const formData = new FormData()\r\n    formData.append(`image`, photoFile)\r\n\r\n    const res = await server.put<SavePhotoResponse>(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type':\r\n          'multipart/form-data'\r\n      }\r\n    })\r\n\r\n    return res.data\r\n  },\r\n  async updateProfile (profile: ProfileType) {\r\n    const res = await server.put<OperationResult>(`profile`, profile)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const authAPI = {\r\n  async me () {\r\n    const res = await server.get<MeResponse>(`auth/me`)\r\n    return res.data\r\n  },\r\n  async login (email: string, password: string, rememberMe = true, captcha: string) {\r\n    const res = await server.post<LoginResponse>(`auth/login`, { email, password, rememberMe, captcha })\r\n    return res.data\r\n  },\r\n  async logout () {\r\n    const res = await server.post<OperationResult>(`auth/logout`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const securityAPI = {\r\n  async getCaptcha () {\r\n    const res = await server.get<GetCaptchaResponse>(`security/get-captcha-url`)\r\n    return res.data\r\n  },\r\n}\r\n\r\nexport const dialogsAPI = {\r\n  // Сортировка человека вверх при начале чатинга\r\n  async startChatting (userID: number) {\r\n    const res = await server.put<OperationResult>(`dialogs/${userID}`)\r\n    return res.data\r\n  },\r\n  // Получить все диалоги (без сообщений просто для вывода)\r\n  async getAllDialogs () {\r\n    const res = await server.get<Array<GetAllDialogsResponse>>(`dialogs`)\r\n    return res.data\r\n  },\r\n  async getDialog (userID: number) {\r\n    const res = await server.get<GetDialogResponse>(`dialogs/${userID}/messages`)\r\n    return res.data\r\n  },\r\n  async sendMessage (userID: number, message: string) {\r\n    const res = await server.post<SendMessageResponse>(`dialogs/${userID}/messages`, { body: message })\r\n    return res.data\r\n  },\r\n  async isMessageViewed (messageID: string) {\r\n    const res = await server.get<boolean>(`dialogs/messages/${messageID}/viewed`)\r\n    return res.data\r\n  },\r\n  async putMessageInSpam (messageID: string) {\r\n    const res = await server.post<OperationResult>(`dialogs/messages/${messageID}/spam`)\r\n    return res.data\r\n  },\r\n  async deleteMessage (messageID: string) {\r\n    const res = await server.delete<OperationResult>(`dialogs/messages/${messageID}`)\r\n    return res.data\r\n  },\r\n  async restoreMessage (messageID: string) {\r\n    const res = await server.put<OperationResult>(`dialogs/messages/${messageID}/restore`)\r\n    return res.data\r\n  },\r\n  async messagesNewerThanDate (userID: number, date: string) {\r\n    const res = await server.get<Array<messagesNewerThanDateResponse>>(\r\n      `dialogs/${userID}/messages/new?newerThen=${date}`\r\n    )\r\n    return res.data\r\n  },\r\n  async getNewMessages () {\r\n    const res = await server.get<number>(`dialogs/messages/new/count`)\r\n    return res.data\r\n  },\r\n}\r\n\r\n// dialogsAPI.startChatting(5).then(r => {console.log(r)})\r\n// dialogsAPI.getAllDialogs().then(r => {console.log(r)})\r\n// dialogsAPI.getDialog(5).then(r => {console.log(r)})\r\n// dialogsAPI.sendMessage(5856, 'test').then(r => {console.log(r)})\r\n// dialogsAPI.isMessageViewed('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.putMessageInSpam('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.deleteMessage('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.restoreMessage('3e755133-76bf-4d8e-9ba4-80a1683973cd').then(r => {console.log(r)})\r\n// dialogsAPI.messagesNewerThanDate(5, '2020-03-11T17:11:10.403').then(r => {console.log(r)})\r\n// dialogsAPI.getNewMessages().then(r => {console.log(r)})\r\n","import { usersAPI } from '../api/api'\r\nimport { UserType } from '../types/AppTypes'\r\nimport { AppStateType } from './store'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\n/* Action types */\r\nconst FOLLOW = 'samurai-network/users/FOLLOW'\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW'\r\nconst SET_USERS = 'samurai-network/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\nconst SET_TERM = 'samurai-network/users/SET_TERM'\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>, // array of users ids\r\n  term: '',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes =\r\n  AcceptFollowActionType |\r\n  AcceptUnfollowActionType |\r\n  SetUsersActionType |\r\n  SetCurrentPageActionType |\r\n  SetTotalUsersActionType |\r\n  SetIsFetchingActionType |\r\n  ToggleFollowingProgressActionType |\r\n  setTermActionType\r\n\r\nfunction usersReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.id) {\r\n            return { ...user, followed: true }\r\n          }\r\n          return user\r\n        }),\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.id) {\r\n            return { ...user, followed: false }\r\n          }\r\n          return user\r\n        }),\r\n      }\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      }\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      }\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      }\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching ?\r\n          [...state.followingInProgress, action.userId] :\r\n          state.followingInProgress.filter(id => id !== action.userId),\r\n      }\r\n\r\n    case SET_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype AcceptFollowActionType = { type: typeof FOLLOW, id: number };\r\nexport const acceptFollow = (id: number): AcceptFollowActionType => ({\r\n  type: FOLLOW,\r\n  id\r\n})\r\n\r\ntype AcceptUnfollowActionType = { type: typeof UNFOLLOW, id: number };\r\nexport const acceptUnfollow = (id: number): AcceptUnfollowActionType => ({\r\n  type: UNFOLLOW,\r\n  id\r\n})\r\n\r\ntype SetUsersActionType = { type: typeof SET_USERS, users: Array<UserType> };\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({\r\n  type: SET_USERS,\r\n  users\r\n})\r\n\r\ntype SetCurrentPageActionType = { type: typeof SET_CURRENT_PAGE, currentPage: number };\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n})\r\n\r\ntype SetTotalUsersActionType = { type: typeof SET_TOTAL_USERS_COUNT, totalUsersCount: number };\r\nexport const setTotalUsers = (totalUsers: number): SetTotalUsersActionType => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount: totalUsers,\r\n})\r\n\r\ntype SetIsFetchingActionType = { type: typeof TOGGLE_IS_FETCHING, isFetching: boolean };\r\nexport const setIsFetching = (isFetching: boolean): SetIsFetchingActionType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n})\r\n\r\ntype ToggleFollowingProgressActionType = { type: typeof TOGGLE_IS_FOLLOWING_PROGRESS, isFetching: boolean, userId: number };\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n})\r\n\r\ntype setTermActionType = { type: typeof SET_TERM, term: string }\r\nexport const setTerm = (term: string): setTermActionType => ({\r\n  type: SET_TERM,\r\n  term,\r\n})\r\n\r\n/* Thunk creators */\r\n// type GetStateType = () => AppStateType\r\n// type DispatchType = Dispatch<ActionTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getRequestUsers = (pageSize: number, currentPage: number, term = ''): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(setIsFetching(true))\r\n    const response = await usersAPI.getUsers(pageSize, currentPage, term)\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsers(response.totalCount))\r\n    dispatch(setIsFetching(false))\r\n  }\r\n}\r\n\r\nexport const follow = (userID: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userID))\r\n    const response = await usersAPI.follow(userID)\r\n    if (response.resultCode === 0) dispatch(acceptFollow(userID))\r\n    dispatch(toggleFollowingProgress(false, userID))\r\n  }\r\n}\r\n\r\nexport const unfollow = (userID: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userID))\r\n    const response = await usersAPI.unfollow(userID)\r\n    if (response.resultCode === 0) dispatch(acceptUnfollow(userID))\r\n    dispatch(toggleFollowingProgress(false, userID))\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import { createSelector } from 'reselect'\r\nimport { AppStateType } from './store'\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector__BadRender = (state: AppStateType) => {\r\n  return getUsers(state).filter(() => true)\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(() => true)\r\n  },\r\n)\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n","import React, { useState, ChangeEvent } from 'react'\r\nimport styles from './Search.module.css'\r\n\r\ntype PropTypes = {\r\n  setTerm: (term: string) => void\r\n  setCurrentPage: (page: number) => void\r\n  setPortionNumber: (number: number) => void\r\n}\r\n\r\nconst Search = React.memo<PropTypes>(\r\n  ({ setTerm, setCurrentPage, setPortionNumber }) => {\r\n    const [inputText, setInputText] = useState('')\r\n\r\n    const onTextChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setInputText(event.target.value)\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n      setCurrentPage(1)\r\n      setTerm(inputText)\r\n      setPortionNumber(1)\r\n    }\r\n\r\n    const onReset = () => {\r\n      setCurrentPage(1)\r\n      setTerm('')\r\n      setInputText('')\r\n      setPortionNumber(1)\r\n    }\r\n\r\n    const searchButtonStyle = {\r\n      cursor: (inputText) ? 'pointer' : 'not-allowed'\r\n    }\r\n\r\n    return (\r\n      <div className={styles.div}>\r\n        <input placeholder=\"Поиск\" type=\"text\" onChange={onTextChange} className={styles.input} value={inputText}/>\r\n        <button\r\n          disabled={!inputText}\r\n          style={searchButtonStyle}\r\n          onClick={onButtonClick}\r\n          className={styles.button}>\r\n          Найти\r\n        </button>\r\n        <button onClick={onReset} className={styles.reset}>Сброс</button>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport styles from './PaginationItem.module.css'\r\n\r\ntype PropTypes = {\r\n  active: boolean\r\n  number: number\r\n}\r\n\r\nconst PaginationItem: React.FC<PropTypes> = ({ active, number }) => {\r\n  const activeStyle = active ? styles.paginationItemActive : ''\r\n\r\n  return (\r\n    <li className={styles.paginationItem + ' ' + activeStyle} data-number={number}>{number}</li>\r\n  )\r\n}\r\n\r\nexport default PaginationItem\r\n","import React, { useEffect } from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport PaginationItem from './PaginationItem/PaginationItem'\r\n\r\ntype PropTypes = {\r\n  currentPage: number\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  portionSize: number\r\n  getRequestUsers: (pageSize: number, currentPage: number, term: string) => void\r\n  term: string\r\n  setCurrentPage: (page: number) => void\r\n  portionNumber: number\r\n  setPortionNumber: (number: number) => void\r\n}\r\n\r\nconst Paginator = React.memo<PropTypes>(\r\n  ({ setCurrentPage, currentPage, totalUsersCount, pageSize, portionSize, getRequestUsers, term, portionNumber, setPortionNumber }) => {\r\n\r\n    useEffect(() => {\r\n      getRequestUsers(pageSize, currentPage, term)\r\n    }, [getRequestUsers, pageSize, currentPage, term])\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n      getRequestUsers(pageSize, currentPage, term)\r\n      setCurrentPage(currentPage)\r\n    }\r\n\r\n    const pageCount = Math.ceil(totalUsersCount / pageSize)\r\n    const pages = []\r\n\r\n    for (let i = 1; i < totalUsersCount; i++) {\r\n      pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const lastElemPageNumber = pageCount / portionSize * portionSize\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const changePage = (event: any) => {\r\n      const pageNumber = +event.target.dataset.number\r\n\r\n      if (pageNumber) {\r\n        onPageChanged(pageNumber)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div onClick={changePage} className={styles.paginationItems}>\r\n        {\r\n          totalUsersCount > 0 &&\r\n          <button disabled={portionNumber === 1} className={styles.button}\r\n                  onClick={() => {setPortionNumber(portionNumber - 1)}}>Влево</button>\r\n        }\r\n        {\r\n          pages.filter(\r\n            (num) => (num >= leftPortionPageNumber && num <= rightPortionPageNumber && num <= lastElemPageNumber))\r\n            .map((num) => (\r\n              <PaginationItem key={num} number={num} active={+currentPage === num}/>\r\n            ))\r\n        }\r\n        {\r\n          totalUsersCount > 0 &&\r\n          <button disabled={portionCount === portionNumber} className={styles.button}\r\n                  onClick={() => {setPortionNumber(portionNumber + 1)}}>Вправо</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Paginator\r\n","import React from 'react'\r\nimport styles from './User.module.css'\r\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../../../../types/AppTypes'\r\n\r\ntype PropTypes = {\r\n  user: UserType\r\n  followButtonDisabled: boolean\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n}\r\n\r\nfunction User ({ user, followButtonDisabled, unfollow, follow }: PropTypes) {\r\n  return (\r\n    <li className={styles.user}>\r\n      <div className={styles.avatarBox}>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <img src={user.photos.small || defaultAvatar} alt='avatar'/>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={styles.info}>\r\n        <NavLink className={styles.userName} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n        {user.status && <span className={styles.userStatus}>{user.status}</span>}\r\n\r\n        {\r\n          user.followed ? (\r\n            <button\r\n              className={styles.followButton}\r\n              disabled={followButtonDisabled}\r\n              onClick={() => {unfollow(user.id)}}\r\n            >\r\n              Отписаться <span aria-label=\"Отписаться\" role=\"img\">❌</span>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className={styles.followButton}\r\n              disabled={followButtonDisabled}\r\n              onClick={() => {follow(user.id)}}\r\n            >\r\n              Подписаться <span aria-label=\"Подписаться\" role=\"img\">✅</span>\r\n            </button>\r\n          )\r\n        }\r\n\r\n        <NavLink to={`/messages/${user.id}`} className={styles.sendMessage}>Написать сообщение</NavLink>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\nimport styles from './Preloader.module.css'\nimport preloader from '../../../assets/images/preloader.gif'\n\ntype PropTypes = {\n  fullscreen?: boolean\n}\n\nconst Preloader: React.FC<PropTypes> = ({ fullscreen = false }) => {\n  return (fullscreen) ? (\n    <div className={styles.wrapper}>\n      <div className={styles.preloader}>\n        <img className={styles.preloaderIMG} src={preloader} alt='load'/>\n      </div>\n    </div>\n  ) : (\n    <img className={styles.preloaderIMG} src={preloader} alt='load'/>\n  )\n}\n\nexport default Preloader\n","import React from 'react'\r\nimport styles from './UsersList.module.css'\r\nimport User from './User/User'\r\nimport { UserType } from '../../../../types/AppTypes'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\n\r\ntype PropTypes = {\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  isFetching: boolean\r\n}\r\n\r\nconst UsersList = React.memo<PropTypes>(\r\n  ({ users, followingInProgress, follow, unfollow, isFetching }) => {\r\n\r\n    const usersOrMessage = (users.length) ?\r\n      users.map((user) => (\r\n        <User key={user.id}\r\n              user={user}\r\n              followButtonDisabled={followingInProgress.some(id => id === user.id)}\r\n              follow={follow}\r\n              unfollow={unfollow}\r\n        />\r\n      )) : 'Ничего не найдено'\r\n\r\n    return (\r\n      isFetching ? <Preloader/> :\r\n        <ul className={styles.users}>\r\n          {usersOrMessage}\r\n        </ul>\r\n    )\r\n\r\n  }\r\n)\r\n\r\nexport default UsersList\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  getRequestUsers,\r\n  setCurrentPage,\r\n  setIsFetching,\r\n  follow,\r\n  unfollow,\r\n  setTerm,\r\n} from '../../../redux/users-reducer'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getTotalUsersCount,\r\n  getUsersSelector,\r\n} from '../../../redux/users-selectors'\r\nimport { AppStateType } from '../../../redux/store'\r\nimport { UserType } from '../../../types/AppTypes'\r\nimport { compose } from 'redux'\r\nimport Search from './Search/Search'\r\nimport Paginator from './Paginator/Paginator'\r\nimport UsersList from './UsersList/UsersList'\r\n\r\ntype MapStatePropTypes = {\r\n  currentPage: number\r\n  users: Array<UserType>\r\n  totalUsersCount: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number>\r\n  term: string\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  setCurrentPage: (page: number) => void\r\n  setIsFetching: (isFetching: boolean) => void\r\n  getRequestUsers: (pageSize: number, currentPage: number, term: string) => void\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  setTerm: (term: string) => void\r\n}\r\n\r\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\r\n\r\nconst Users: React.FC<PropTypes> = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  isFetching,\r\n  users,\r\n  followingInProgress,\r\n  setCurrentPage,\r\n  follow,\r\n  unfollow,\r\n  setTerm,\r\n  getRequestUsers,\r\n  term,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setCurrentPage(1)\r\n    }\r\n  }, [setCurrentPage])\r\n\r\n  const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n  return (\r\n    <>\r\n      <h1>Пользователи</h1>\r\n      <Search\r\n        setTerm={setTerm}\r\n        setCurrentPage={setCurrentPage}\r\n        setPortionNumber={setPortionNumber}\r\n      />\r\n      <Paginator\r\n        totalUsersCount={totalUsersCount}\r\n        currentPage={currentPage}\r\n        pageSize={6}\r\n        portionSize={10}\r\n        getRequestUsers={getRequestUsers}\r\n        term={term}\r\n        setCurrentPage={setCurrentPage}\r\n        portionNumber={portionNumber}\r\n        setPortionNumber={setPortionNumber}\r\n      />\r\n      <UsersList\r\n        users={users}\r\n        followingInProgress={followingInProgress}\r\n        follow={follow}\r\n        unfollow={unfollow}\r\n        isFetching={isFetching}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    term: state.usersPage.term,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropTypes, MapDispatchPropTypes, unknown, AppStateType>(mapStateToProps, {\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    getRequestUsers,\r\n    follow,\r\n    unfollow,\r\n    setTerm,\r\n  }),\r\n)(Users)\r\n","import React from 'react'\nimport styles from './News.module.css'\n\nfunction News () {\n  return (\n    <div className={styles.messages}>\n      Новости\n    </div>\n  )\n}\n\nexport default News\n","import React from 'react'\nimport styles from './Music.module.css'\n\nfunction Music () {\n  return (\n    <div className={styles.messages}>\n      Музыка\n    </div>\n  )\n}\n\nexport default Music\n","import React from 'react'\nimport styles from './Settings.module.css'\n\nfunction Settings () {\n  return (\n    <div className={styles.messages}>\n      Настройки\n    </div>\n  )\n}\n\nexport default Settings\n","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport function createField (FormElement: string) {\r\n  return function ({ meta, input, ...props }: any) {\r\n    const isError = meta.error && meta.touched\r\n\r\n    return (\r\n      <span className={(isError || null) && styles.error}>\r\n        <FormElement {...input} {...props} />\r\n        {isError && <span>{meta.error}</span>}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n","export const required = (value: string) => {\r\n  if (!value) return 'Поле обязательное'\r\n}\r\n\r\nexport const maxLengthCreator = (length: number) => (value: string) => {\r\n  if (value.length > length) return `Максимальная длина - ${length}`\r\n}\r\n","import { getAuthUserData, setMyProfile } from './auth-reducer'\r\nimport { profileAPI } from '../api/api'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from './store'\r\n\r\n/* Action types */\r\nconst INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED_SUCCESS'\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes = InitializedSuccessType\r\n\r\nfunction initReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype InitializedSuccessType = { type: typeof INITIALIZED_SUCCESS };\r\nexport const initializedSuccess = (): InitializedSuccessType => ({\r\n  type: INITIALIZED_SUCCESS\r\n})\r\n\r\n/* Thunk creators */\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const initializeApp = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(getAuthUserData())\r\n      .then(() => {\r\n        dispatch(getMyProfile()).then(() => {\r\n          dispatch(initializedSuccess())\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getMyProfile = (): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const isAuth = getState().auth.isAuth\r\n    const userID = getState().auth.userId\r\n\r\n    if (isAuth && userID) {\r\n      const response = await profileAPI.getProfile(userID)\r\n      // @ts-ignore\r\n      dispatch(setMyProfile(response))\r\n    }\r\n  }\r\n}\r\n\r\nexport default initReducer\r\n","import { authAPI, securityAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { ProfileType } from '../types/AppTypes'\r\nimport { getMyProfile } from './init-reducer'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from './store'\r\n\r\n/* Action types */\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'samurai-network/auth/GET_CAPTCHA_URL'\r\nconst SET_MY_PROFILE = 'samurai-network/auth/SET_MY_PROFILE'\r\n\r\nconst initialState = {\r\n  userId: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n  captchaUrl: null as string | null,\r\n  myProfile: null as ProfileType | null,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes =\r\n  SetAuthUserDataActionType |\r\n  GetCaptchaUrlSuccessType |\r\n  SetMyProfileType\r\n\r\nfunction authReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n\r\n    case GET_CAPTCHA_URL:\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.captchaUrl,\r\n      }\r\n\r\n    case SET_MY_PROFILE:\r\n      return {\r\n        ...state,\r\n        myProfile: action.profile,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype SetAuthUserDataActionPayloadType = { userId: number | null, email: string | null, login: string | null, isAuth: boolean };\r\ntype SetAuthUserDataActionType = { type: typeof SET_USER_DATA, payload: SetAuthUserDataActionPayloadType };\r\nexport const setAuthUserData = (\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean,\r\n): SetAuthUserDataActionType => (\r\n  { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\r\n)\r\n\r\ntype GetCaptchaUrlSuccessType = { type: typeof GET_CAPTCHA_URL, captchaUrl: string };\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessType => ({\r\n  type: GET_CAPTCHA_URL,\r\n  captchaUrl: captchaUrl,\r\n})\r\n\r\ntype SetMyProfileType = { type: typeof SET_MY_PROFILE, profile: ProfileType }\r\nexport const setMyProfile = (profile: ProfileType): SetMyProfileType => ({\r\n  type: SET_MY_PROFILE,\r\n  profile,\r\n})\r\n\r\n/* Thunk creators */\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getAuthUserData = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const meData = await authAPI.me()\r\n\r\n    if (meData.resultCode === 0) {\r\n      let { id, email, login } = meData.data\r\n      dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if (data.resultCode === 0) {\r\n      dispatch(getAuthUserData()).then(() => {\r\n        dispatch(getMyProfile())\r\n      })\r\n    }\r\n    else {\r\n      // 10 - Captcha is required\r\n      if (data.resultCode === 10) {\r\n        await dispatch(getCaptchaUrl())\r\n      }\r\n\r\n      // @ts-ignore\r\n      dispatch(stopSubmit('login', { _error: data.messages[0] }))\r\n    }\r\n  }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n\r\n    if (response.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await securityAPI.getCaptcha()\r\n    const captchaUrl = response.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { createField } from '../../common/FormsControls/createField'\r\nimport { required } from '../../../utils/validators'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Input = createField('input')\r\n\r\nfunction Login (props) {\r\n  const onSubmit = async (formData) => {\r\n    const { login, password, rememberMe, captcha } = formData\r\n    props.login(login, password, rememberMe, captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to='/profile'/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Авторизация</h1>\r\n      <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction LoginForm ({ handleSubmit, error, captchaUrl }) {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type='text' placeholder='Логин' name='login' component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type='password' placeholder='Пароль' name='password'\r\n          component={Input} validate={[required]}\r\n        />\r\n      </div>\r\n      <Field\r\n        type='checkbox' name='rememberMe' id='rememberMe'\r\n        component={Input} checked\r\n      />\r\n      <label htmlFor='rememberMe'>Запомнить меня</label>\r\n\r\n      {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n      {captchaUrl &&\r\n      <Field\r\n        type='text' placeholder='Капча' name='captcha' component={Input}\r\n        validate={[required]}\r\n      />}\r\n\r\n      {error ? <div style={{ color: 'red' }}>{error}</div> : null}\r\n      <div>\r\n        <button>Войти</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default connect((state) => ({\r\n  isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl\r\n}), { login })(Login)\r\n","const SEND_MESSAGE = 'samurai-network/messages/SEND_MESSAGE'\r\n\r\ntype DialogType = {\r\n  id: number\r\n  username: string\r\n}\r\n\r\ntype MessageType = {\r\n  id: number\r\n  username: string\r\n  message: string\r\n}\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, username: 'Димыч' },\r\n    { id: 2, username: 'Саша' },\r\n    { id: 3, username: 'Валера' },\r\n    { id: 4, username: 'Иван' },\r\n    { id: 5, username: 'Света' },\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    { id: 1, username: 'Димыч', message: 'Я люблю react!' },\r\n    { id: 2, username: 'Димыч', message: 'Я люблю react!' },\r\n  ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nfunction messagesReducer (state = initialState, action: any): InitialStateType {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const nextId = state.messages[state.messages.length - 1].id + 1\r\n      const newMessage = {\r\n        id: nextId,\r\n        username: 'username',\r\n        message: action.formData.message,\r\n      }\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype sendMessageActionCreatorActionType = {\r\n  type: typeof SEND_MESSAGE\r\n  formData: string\r\n}\r\n\r\nexport const sendMessageActionCreator = (formData: string): sendMessageActionCreatorActionType => ({\r\n  type: SEND_MESSAGE,\r\n  formData: formData,\r\n})\r\n\r\nexport default messagesReducer\r\n","import React from 'react'\nimport styles from './Dialog.module.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Dialog (props) {\n  return (\n    <li className={styles.dialog}>\n      <NavLink to={`/messages/${String(props.id)}`}>{props.name}</NavLink>\n    </li>\n  )\n}\n\nexport default Dialog\n","import React from 'react'\nimport styles from './Message.module.css'\n\nfunction Message (props) {\n  return (\n    <li className={styles.chatItem}>\n      <div className={styles.profile}>\n        <img\n          className={styles.avatar}\n          src='https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg'\n          alt='avatar'\n        />\n        <div>{props.name}</div>\n      </div>\n      <div>\n        {props.message}\n      </div>\n    </li>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport styles from './Messages.module.css'\nimport Dialog from './Dialog/Dialog'\nimport Message from './Message/Message'\nimport { Field, reduxForm } from 'redux-form'\nimport { createField } from '../../common/FormsControls/createField'\nimport { maxLengthCreator, required } from '../../../utils/validators'\n\nconst maxLength = maxLengthCreator(10)\nconst Textarea = createField('textarea')\n\nfunction Messages (props) {\n  const dialogsElements = props.state.dialogs.map(\n    dialog => <Dialog key={dialog.id} id={dialog.id} name={dialog.username}/>\n  )\n\n  const messagesElements = props.state.messages.map(\n    message => <Message\n      key={message.id} name={message.username}\n      message={message.message}\n    />\n  )\n\n  return (\n    <div className={styles.messages}>\n      <div className={styles.output}>\n        <ul className={styles.dialogs}>\n          {dialogsElements}\n        </ul>\n        <ul className={styles.chat}>\n          {messagesElements}\n        </ul>\n      </div>\n      <AddMessageFormRedux\n        onSubmit={(formData) => { props.buttonOnClick(formData) }}\n      />\n    </div>\n  )\n}\n\nfunction AddMessageForm (props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name='message' validate={[required, maxLength]}\n          component={Textarea}\n        />\n      </div>\n      <div>\n        <button>Отправить</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'addMessage' })(AddMessageForm)\n\nexport default Messages\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType } from '../redux/store'\r\n\r\nfunction mapStateToPropsForRedirect (state: AppStateType) {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect (Component: React.ComponentType) {\r\n  type PropTypes = {\r\n    isAuth: boolean\r\n  }\r\n\r\n  class RedirectComponent extends React.Component<PropTypes> {\r\n    render () {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n","import { sendMessageActionCreator } from '../../../redux/messages-reducer'\nimport Messages from './Messages'\nimport { connect } from 'react-redux'\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\nfunction mapStateToProps (state) {\n  return {\n    state: state.messagesPage\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    buttonOnClick (formData) {\n      dispatch(sendMessageActionCreator(formData))\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Messages)\n","import { profileAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { PhotosType, PostType, ProfileType } from '../types/AppTypes'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from './store'\r\n\r\n/* Action types */\r\nconst ADD_POST = 'samurai-network/profile/ADD_POST'\r\nconst SET_USER_PROFILE = 'samurai-network/profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'samurai-network/profile/SET_STATUS'\r\nconst SET_PROFILE_PHOTO = 'samurai-network/profile/SET_PROFILE_PHOTO'\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, text: 'Вам нравится React?', likes: 4 },\r\n    { id: 2, text: 'hey', likes: 2 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionTypes =\r\n  AddPostActionType |\r\n  SetUserProfileActionType |\r\n  SetStatusActionType |\r\n  setProfilePhotoActionType\r\n\r\nfunction profileReducer (state = initialState, action: ActionTypes): InitialStateType {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: state.posts[state.posts.length - 1].id + 1,\r\n        text: action.text,\r\n        likes: 0,\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      }\r\n\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      }\r\n\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      }\r\n\r\n    case SET_PROFILE_PHOTO:\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Action creators */\r\ntype AddPostActionType = { type: typeof ADD_POST, text: string }\r\nexport const addPost = (formData: { newPost: string }): AddPostActionType => ({\r\n  type: ADD_POST,\r\n  text: formData.newPost\r\n})\r\n\r\ntype SetUserProfileActionType = { type: typeof SET_USER_PROFILE, profile: ProfileType }\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({\r\n  type: SET_USER_PROFILE,\r\n  profile: profile\r\n})\r\n\r\ntype SetStatusActionType = { type: typeof SET_STATUS, status: string }\r\nexport const setStatus = (status: string): SetStatusActionType => ({\r\n  type: SET_STATUS,\r\n  status: status\r\n})\r\n\r\ntype setProfilePhotoActionType = { type: typeof SET_PROFILE_PHOTO, photos: PhotosType }\r\nexport const setProfilePhoto = (photos: PhotosType): setProfilePhotoActionType => ({\r\n  type: SET_PROFILE_PHOTO,\r\n  photos: photos\r\n})\r\n\r\n/* Thunk creators */\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\n\r\nexport const getUsersProfile = (userID: number | null): ThunkType => {\r\n  return async (dispatch) => {\r\n    if (userID) {\r\n      const response = await profileAPI.getProfile(userID)\r\n      dispatch(setUserProfile(response))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response))\r\n  }\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.resultCode === 0) {\r\n      dispatch(setStatus(status))\r\n    }\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: any): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updatePhoto(file)\r\n    if (response.resultCode === 0) {\r\n      dispatch(setProfilePhoto(response.data.photos))\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const response = await profileAPI.updateProfile(profile)\r\n    if (response.resultCode === 0) {\r\n      await dispatch(getUsersProfile(getState().auth.userId))\r\n    }\r\n    else {\r\n      // @ts-ignore\r\n      dispatch(stopSubmit('edit-profile', { _error: 'response.data.messages[0]' }))\r\n      return Promise.reject()\r\n    }\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n","import React, { useEffect, useState } from 'react'\nimport styles from './Status.module.css'\n\ntype PropTypes = {\n  status: string\n  updateStatus: (status: string) => void\n}\n\nfunction Status (props: PropTypes) {\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n  // let [editMode, setEditMode] = useState<number | null>(null)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n  }\n\n  const updateStatus = () => {\n    deactivateEditMode()\n    props.updateStatus(status)\n  }\n\n  const onStatusChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStatus(event.currentTarget.value)\n  }\n\n  const selectInputText = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.currentTarget.select()\n  }\n\n  return (\n    <div className={styles.status}>\n      {\n        !editMode &&\n        <div onClick={activateEditMode}>{props.status || 'null'}</div>\n      }\n\n      {\n        editMode &&\n        <div>\n          <input autoFocus onChange={onStatusChange} onBlur={updateStatus}\n                 onFocus={selectInputText} type=\"text\" value={status}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Status\n","import React from 'react'\r\nimport { createField } from '../../../common/FormsControls/createField'\r\nimport { required } from '../../../../utils/validators'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst Input = createField('input')\r\nconst Textarea = createField('textarea')\r\n\r\nfunction ProfileDataForm (props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <button>Сохранить</button>\r\n      </div>\r\n\r\n      {props.error && <div>{props.error}</div>}\r\n\r\n      <div>\r\n        <div>\r\n          <label>\r\n            Имя:\r\n            <Field\r\n              type='text' placeholder='Имя' name='fullName'\r\n              component={Input} validate={[required]}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Ищу работу:\r\n            <Field type='checkbox' name='lookingForAJob' component={Input}/>\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Мои навыки:\r\n            <Field\r\n              name='lookingForAJobDescription' component={Textarea}\r\n              validate={[required]}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Обо мне:\r\n            <Field name='aboutMe' component={Textarea} validate={[required]}/>\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <b>Контакты</b>\r\n          {\r\n            Object.keys(props.profile.contacts).map(key => {\r\n              return <div key={key}>\r\n                <b>{key}</b>:\r\n                <Field\r\n                  type='text' placeholder={key} name={'contacts.' + key}\r\n                  component={Input}\r\n                />\r\n              </div>\r\n            })\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n","import React, { useState } from 'react'\nimport styles from './User.module.css'\nimport Preloader from '../../../common/Preloader/Preloader'\nimport Status from './Status/StatusHooks'\nimport defaultAvatar from '../../../../assets/images/defaultAvatar.png'\nimport ProfileDataForm from './ProfileDataForm'\n\nfunction User ({ profile, savePhoto, status, updateStatus, isOwner, saveProfile }) {\n  const [editMode, setEditMode] = useState(false)\n\n  if (!profile) {\n    return <Preloader/>\n  }\n\n  function onMainPhotoSelected (e) {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0])\n    }\n  }\n\n  function onSubmit (formData) {\n    saveProfile(formData).then(() => {\n      setEditMode(false)\n    })\n  }\n\n  return (\n    <div className={styles.user}>\n      <div className={styles.avatar}>\n        <div className={styles.avatarWrapper}>\n          <img\n            className={styles.avatarIMG}\n            src={profile.photos.large || defaultAvatar} alt='avatar'\n          />\n        </div>\n        {\n          isOwner &&\n          <div>\n            <input onChange={onMainPhotoSelected} type='file'/>\n          </div>\n        }\n      </div>\n\n      <div className={styles.info}>\n        <h1 className={styles.name}>\n          {profile && profile.fullName}\n        </h1>\n        <Status status={status} updateStatus={updateStatus}/>\n        {editMode\n          ? <ProfileDataForm\n            profile={profile} initialValues={profile}\n            onSubmit={onSubmit}\n          />\n          : <ProfileData\n            goToEditMode={() => { setEditMode(true) }}\n            isOwner={isOwner} profile={profile}\n          />}\n      </div>\n    </div>\n  )\n}\n\nfunction Contact ({ contactTitle, contactValue }) {\n  return <li>{contactTitle}: {contactValue}</li>\n}\n\nfunction ProfileData ({ profile, isOwner, goToEditMode }) {\n  return (\n    <>\n      {isOwner && <button onClick={goToEditMode}>Редактировать</button>}\n      <ul className={styles.about}>\n        <li>Ищу работу: {profile.lookingForAJob ? 'да' : 'нет'}</li>\n        {profile.lookingForAJob && <li>Мои профессиональные\n          навыки: {profile.lookingForAJobDescription}\n        </li>}\n        {profile.aboutMe && <li>Обо мне: {profile.aboutMe}</li>}\n        <li className={styles.contLI}>\n          Мои контакты:\n          <ul className={styles.contacts}>\n            {Object.keys(profile.contacts).map((key) =>\n              <Contact\n                key={key} contactTitle={key}\n                contactValue={profile.contacts[key]}\n              />,\n            )}\n          </ul>\n        </li>\n      </ul>\n    </>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport styles from './Post.module.css'\n\nfunction Post (props) {\n  return (\n    <div className={styles.post}>\n      <div>\n        <img className={styles.avatar} src='https://miro.medium.com/max/480/1*5LGjgBL2kWpog3AodB569A.jpeg' alt='' />\n      </div>\n      <div className={styles.message}>\n        <div>\n          {props.text}\n        </div>\n        <div>\n          {props.likes}♥\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport styles from './Posts.module.css'\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../../utils/validators'\nimport { createField } from '../../../common/FormsControls/createField'\n\nconst maxLength = maxLengthCreator(10)\nconst Textarea = createField('textarea')\n\nfunction Posts (props) {\n  const postsElements = props.state.profilePage.posts.map(\n    post => <Post key={post.id} text={post.text} likes={post.likes} />\n  ).reverse()\n\n  return (\n    <div className={styles.posts}>\n      <h2 className={styles.title}>Посты</h2>\n      <AddNewPostFormRedux onSubmit={(formData) => { props.addPost(formData) }} />\n      <div className={styles.postsList}>\n        {postsElements}\n      </div>\n    </div>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddNewPost' })(AddNewPostForm)\n\nfunction AddNewPostForm (props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          className={styles.textarea} name='newPost' component={Textarea} placeholder='Что у вас нового?'\n          validate={[required, maxLength]}\n        />\n      </div>\n      <div>\n        <button className={styles.button}>Отправить</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Posts\n","import { addPost } from '../../../../redux/profile-reducer'\nimport Posts from './Posts'\nimport { connect } from 'react-redux'\n\nfunction mapStateToProps (state) {\n  return {\n    state: state\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    addPost (formData) {\n      dispatch(addPost(formData))\n    }\n  }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\n\nexport default PostsContainer\n","import React, { useEffect } from 'react'\r\nimport {\r\n  getStatus,\r\n  getUsersProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus\r\n} from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { ProfileType } from '../../../types/AppTypes'\r\nimport User from './User/User'\r\nimport PostsContainer from './Posts/PostsContainer'\r\nimport styles from './Profile.module.css'\r\nimport { AppStateType } from '../../../redux/store'\r\n\r\ntype PathParamsType = {\r\n  userID: string\r\n}\r\n\r\ntype MapStatePropTypes = {\r\n  userID: number | null\r\n  profile: ProfileType | null\r\n  status: string\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  getUsersProfile: (userID: number) => void\r\n  getStatus: (userID: number) => void\r\n  savePhoto: (photo: Blob) => void\r\n  updateStatus: (newStatus: string) => void\r\n  saveProfile: (profile: ProfileType) => void\r\n}\r\n\r\ntype PropTypes = RouteComponentProps<PathParamsType> & MapStatePropTypes & MapDispatchPropTypes\r\n\r\nconst Profile: React.FC<PropTypes> = ({\r\n  savePhoto, profile, status, updateStatus, saveProfile, match, userID, history, getUsersProfile, getStatus\r\n}) => {\r\n\r\n  const userURL = +match.params.userID || userID || +history.push('/login')\r\n  const isOwner = userID === userURL\r\n\r\n  useEffect(() => {\r\n    const updateProfile = () => {\r\n      if (userURL) {\r\n        getUsersProfile(userURL)\r\n        getStatus(userURL)\r\n      }\r\n    }\r\n\r\n    updateProfile()\r\n  }, [userURL, getUsersProfile, getStatus])\r\n\r\n  return (\r\n    <div className={styles.profile}>\r\n      <User\r\n        savePhoto={savePhoto}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        isOwner={isOwner}\r\n        saveProfile={saveProfile}\r\n      />\r\n      <PostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userID: state.auth.userId\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropTypes, MapDispatchPropTypes, unknown, AppStateType>(mapStateToProps, {\r\n    getUsersProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n)(Profile)\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport styles from './Main.module.css'\r\nimport Users from './Users/Users'\r\nimport News from './News/News'\r\nimport Music from './Music/Music'\r\nimport Settings from './Settings/Settings'\r\nimport Login from './Login/Login'\r\nimport MessagesContainer from './Messages/MessagesContainer'\r\nimport Profile from './Profile/Profile'\r\n\r\nfunction Main () {\r\n  return (\r\n    <div className={styles.content}>\r\n      <Switch>\r\n        <Route exact path='/' render={() => <Redirect to='/profile'/>}/>\r\n        // @ts-ignore\r\n        <Route path='/profile/:userID?' render={() => <Profile/>}/>\r\n        <Route path='/messages' render={() => <MessagesContainer/>}/>\r\n        <Route path='/users' render={() => <Users/>}/>\r\n        <Route path='/news' component={News}/>\r\n        <Route path='/music' component={Music}/>\r\n        <Route path='/settings' component={Settings}/>\r\n        <Route path='/login' render={() => <Login/>}/>\r\n        <Route path='*' render={() => '404'}/>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\nimport styles from './Button.module.css'\n\ntype PropTypes = {\n  width?: number\n  onClick?: () => any\n}\n\nconst Button: React.FC<PropTypes> = ({ width, children, onClick }) => {\n  return (\n    <button onClick={onClick} style={{ width }} className={styles.button}>{children}</button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { logout } from '../../redux/auth-reducer'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../../redux/store'\nimport styles from './Header.module.css'\nimport Button from '../common/Button/Button'\nimport { NavLink } from 'react-router-dom'\nimport { ProfileType } from '../../types/AppTypes'\n\ntype MapStatePropTypes = {\n  isAuth: boolean\n  myProfile: ProfileType | null\n}\n\ntype MapDispatchPropTypes = {\n  logout: () => void\n}\n\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\n\nconst Header: React.FC<PropTypes> = ({ isAuth, logout, myProfile }) => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.container}>\n        <div>Samurai-Network</div>\n        {\n          isAuth && myProfile && myProfile.photos.small ? (\n              <div className={styles.infoMe}>\n                <NavLink to='/profile' className={styles.userName}>\n                  <span>\n                    {myProfile.fullName.split(' ')[0]}\n                  </span>\n                </NavLink>\n                <NavLink to='/profile' className={styles.avatar}>\n                  <img src={myProfile.photos.small} alt='avatar'/>\n                </NavLink>\n                <Button onClick={logout}>Выйти</Button>\n              </div>\n            )\n            : (\n              <NavLink to='/login' className={styles.login}>\n                <Button>Авторизоваться</Button>\n              </NavLink>\n            )\n        }\n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropTypes => ({\n  isAuth: state.auth.isAuth,\n  myProfile: state.auth.myProfile\n})\n\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, Object, AppStateType>(mapStateToProps, {\n  logout,\n})(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport styles from './App.module.css'\nimport Footer from './Footer/Footer'\nimport Sidebar from './Sidebar/Sidebar'\nimport Main from './Main/Main'\nimport Header from './Header/Header'\nimport { initializeApp } from '../redux/init-reducer'\nimport { AppStateType } from '../redux/store'\nimport { HashRouter } from 'react-router-dom'\nimport Preloader from './common/Preloader/Preloader'\n\ntype MapStatePropTypes = {\n  initialized: boolean\n}\n\ntype MapDispatchPropTypes = {\n  initializeApp: () => void\n}\n\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\n\nconst App: React.FC<PropTypes> = ({ initializeApp, initialized }) => {\n  useEffect(() => {\n    initializeApp()\n  }, [initializeApp])\n\n  if (!initialized) {\n    return <Preloader fullscreen/>\n  }\n\n  return (\n    <HashRouter>\n      <div className={styles.page}>\n        <Header/>\n        <main className={styles.main}>\n          <Sidebar/>\n          <Main/>\n        </main>\n        <Footer/>\n      </div>\n    </HashRouter>\n  )\n}\n\nfunction mapStateToProps (state: AppStateType): MapStatePropTypes {\n  return {\n    initialized: state.init.initialized\n  }\n}\n\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, Object, AppStateType>(\n  mapStateToProps, { initializeApp }\n)(App)\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport messagesReducer from './messages-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport initReducer from './init-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  init: initReducer,\r\n  form: formReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nexport default store\r\n","import * as serviceWorker from './serviceWorker'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2CR8J\",\"container\":\"Header_container__HDvgl\",\"userName\":\"Header_userName__3dpGW\",\"avatar\":\"Header_avatar__34Ghc\",\"infoMe\":\"Header_infoMe__UMQTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__epRJ6\",\"title\":\"Posts_title__3oTfI\",\"textarea\":\"Posts_textarea__1CXXA\",\"button\":\"Posts_button__3XZT1\",\"postsList\":\"Posts_postsList__3exEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Search_div__2HjV8\",\"input\":\"Search_input__1SF7g\",\"button\":\"Search_button__tmFR-\",\"reset\":\"Search_reset__2G7ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderIMG\":\"Preloader_preloaderIMG__BZHNf\",\"wrapper\":\"Preloader_wrapper__1pJ8g\",\"preloader\":\"Preloader_preloader__oGcz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__sE-hE\",\"output\":\"Messages_output__3DU-1\",\"dialogs\":\"Messages_dialogs__2NDBb\",\"chat\":\"Messages_chat__3KJVi\"};","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.b4b85090.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItems\":\"Paginator_paginationItems__2iECZ\",\"button\":\"Paginator_button__1_Jp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatItem\":\"Message_chatItem__1I8h1\",\"profile\":\"Message_profile__PfNrB\",\"avatar\":\"Message_avatar__2V5Z4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__lASZN\",\"avatar\":\"Post_avatar__3eC36\",\"message\":\"Post_message__3tS2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__4Klr-\",\"main\":\"App_main__1nCkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItem\":\"PaginationItem_paginationItem__1EdWb\",\"paginationItemActive\":\"PaginationItem_paginationItemActive__1EfE6\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.584b607f.gif\";"],"sourceRoot":""}